var textForPages = ["Programación → diversificado                             EducaTeach - 2025                                              INTRODUCCIÓN AL LENGUAJE DE      EducaTeach - 2025                    PROGRAMACIÓN                                                                     EducaTeach - 2025                                                       → CUARTO DIVERSIFICADO                                                                                  Pág. 1                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                                                           EL RAZONAMIENTO LÓGICO                                                  Presaberes                            USO DE LA PROGRAMACIÓN                                                                                        EL ALGORITMO                                                                                        ETAPAS DEL ALGORTIMO                                                                                        PESUDOCÓDIGO                                                                                        ALGORITMOS EN PSEINT      EducaTeach - 2025                                                                                                     EducaTeach - 2025                             Unidad 1                                                                                              ALGORTIMOS SECUENCIALES                                                       Crear                             ALGOTIMOS CONDICIONALES                                                                         Pág. 2                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                           ¿DÓNDE ESTÁ PRESENTE LA PROGRAMACIÓN?             La programación está presente en todos los aparatos electrónicos         (computadoras), y varias áreas de la tecnología, tales como:           1. Tecnología y dispositivos         Electrodomésticos:  Televisores,  lavadoras,  hornos  inteligentes,         refrigeradores.         Teléfonos  y  computadoras:  Sistemas  operativos,  aplicaciones  y         juegos.         Dispositivos  inteligentes:  Asistentes  de  voz  (Alexa,  Siri),  relojes         inteligentes, cámaras de seguridad.           2. Internet y software      EducaTeach - 2025   Páginas  web:  Sitios  de  comercio  electrónico,  redes  sociales,                               EducaTeach - 2025           motores de búsqueda.         Aplicaciones móviles: Desde redes sociales como Instagram hasta         apps de transporte como Uber.         Inteligencia artificial: Chatbots, reconocimiento de voz y sistemas         de recomendación.           3. Ciencia y medicina         Investigación científica: Simulaciones y modelado de fenómenos         naturales.         Dispositivos  médicos:  Máquinas  de  resonancia  magnética,         marcapasos y robots quirúrgicos.         Gestión  de  datos  médicos:  Sistemas  de  historial  clínico         electrónico.          4. Educación         Plataformas de aprendizaje: Moodle, Khan Academy, Duolingo.         Recursos educativos: Simuladores y herramientas interactivas en         proyectos STEAM.         Programación  como  materia:  Enseñanza  de  lenguajes  como        Python, Scratch o C++.                                                       Pág. 3                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             5. Entretenimiento                             Videojuegos: Consolas, juegos móviles y de PC.                              Plataformas  de  streaming:  Netflix,  Spotify  y  sus  algoritmos  de                              recomendación.                             Producción  audiovisual:  Edición  de  video,  animación  y  efectos                              especiales.                               6. Transporte                             Vehículos:  Autos  autónomos,  control  de  motores,  sistemas  de                               navegación (GPS).                             Infraestructura: Gestión del tráfico y sistemas ferroviarios.                             Logística: Optimización de rutas para entregas.                                7. Industria y comercio                             Automatización industrial: Robots en fábricas, control de procesos.                              Finanzas: Comercio algorítmico, análisis de datos financieros.                              E-commerce: Plataformas como Amazon o Mercado Libre.      EducaTeach - 2025          8. Agricultura                                                                             EducaTeach - 2025                                Agricultura  de  precisión:  Sensores  para  monitorear  cultivos,  drones                             para análisis de terrenos.                             Sistemas de riego: Controlados por software según necesidades.                                9. Gobiernos                             Gestión de servicios públicos                              Plataformas digitales: Portales de servicios ciudadanos, como pago de                              impuestos, solicitud de documentos, o registro civil.                             Sistemas  de  gestión:  Software  para  la  administración  de  datos  de                              salud, educación, o transporte público.                              Ciberseguridad:  Protección             contra      ataques       cibernéticos  en                             infraestructuras críticas.                                Análisis de datos                             Big Data: Uso de programación para analizar grandes volúmenes de                               datos y diseñar políticas públicas basadas en evidencia.                              Modelos  predictivos:  Predicción  de  fenómenos  sociales  como  el                             desempleo o la movilidad urbana.                                                              Pág. 4                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Automatización        Procesos  burocráticos:  Automatización  de  trámites  para         hacerlos más rápidos y eficientes.         Inteligencia  artificial:  Asistentes  virtuales  en  portales         gubernamentales.         Transparencia y democracia digital         Blockchain:  Sistemas  de  votación  electrónica  y  auditorías         transparentes.         Portales de acceso a la información: Desarrollo de plataformas         para que los ciudadanos accedan a información pública.          10. Defensa Militar         Sistemas de armamento         Armas inteligentes: Misiles guiados, drones de combate y robots         militares controlados mediante software.         Vehículos autónomos: Tanques y submarinos no tripulados que         operan con sistemas programados.       EducaTeach - 2025   Ciberseguridad y ciberdefensa                                                                     EducaTeach - 2025          Protección de redes: Sistemas para evitar ataques cibernéticos         en infraestructuras militares.         Ofensivas  cibernéticas:  Herramientas  programadas  para        neutralizar redes enemigas.           Sistemas de vigilancia y espionaje         Satélites:  Monitoreo  global  mediante  programación  avanzada         para recolectar información.         Reconocimiento  facial  y  análisis  de  imágenes:  Uso  de         inteligencia artificial para identificar amenazas.           Simulaciones y entrenamiento         Entrenamiento  virtual:  Uso  de  simuladores  programados  para         entrenamiento de soldados en situaciones de combate.         Predicción  táctica:  Modelado  computacional  para  planear         estrategias militares.         Gestión logística         Optimización  de  recursos:  Software  para  gestionar  inventarios         de suministros, armamento y despliegue de tropas.         Monitoreo en tiempo real: Programación para rastrear tropas y        equipos en operaciones.                                                       Pág. 5                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                     INICIAMOS CON EL RAZONAMIENTO LÓGICO                                  Es habilidad de pensar, procesar y utilizar datos para convertirlo     EducaTeach - 2025            en información y así adquirir conocimientos, entender el mundo                           EducaTeach - 2025                                     y  tomar  las  mejores  decisiones  adecuadas  para  presentar                                  resultados  efectivos,  tanto  en  la  vida  real;  como  en  las                                     matemáticas, ciencias y tecnología.       Preguntas de razonamiento lógico:                        Problema de relación                                                                En  una  familia,  Pedro  es  el  padre  de  Ana,  Ana  es  la  hermana  de                                                                Luis, y Luis es el hijo de Carla. ¿Qué relación tiene Pedro con Carla?       Secuencia numérica                                       a) Es su esposo        ¿Qué número falta en la siguiente secuencia?             b) Es su hermano       2, 4, 8, 16, __, 64                                      c) Es su padre       a) 24                                                    d) Es su amigo       b) 32       c) 40                                                    Problema lógico       d) 48                                                      Si  un  tren viaja  a  60  km/h  durante  2  horas, ¿cuántos  kilómetros                                                                habrá recorrido?       Lógica de palabras                                         a) 120 km       Si  \"todos  los  gatos  son  animales\",  y  \"algunos  animales  son      b) 100 km       mascotas\", ¿puedes decir  con certeza  si  todos  los  gatos  son       mascotas?                                                c) 60 km                                                                d) 30 km       a) Sí       b) No                                                    Razonamiento espacial       c) No se puede saber                                       Si un cubo tiene 6 caras, ¿cuántas caras tiene 5 cubos idénticos, si       d) Todos los gatos son animales, pero no mascotas          los  colocamos  de  forma que  cada cubo  esté  tocando  al menos  a                                                                  otro cubo?                                                                a) 30                                                                  b) 20                                                                c) 24                                                                d) 25                                                        Pág. 6                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Liberemos a michi            Soluciones  muy  creativas  para  liberar  a  un  gato  que  está        atrapado en un árbol grande, teniendo en cuenta que está         allí por los perros y las personas:         Llamar  a  los  bomberos:  Los  bomberos  tienen  el  equipo  adecuado  y  la         experiencia para subir al árbol de forma segura y bajar al gato.          Uso de una escalera: Si es posible, usar una escalera alta para llegar al gato y        bajarlo con cuidado.         Colocar comida cerca del árbol: Colocar la comida preferida del gato cerca        de la base del árbol para atraerlo hacia abajo.          Construir  una  rampa  de  escalera:  Colocar  una  rampa  o  una  serie  de        plataformas sobre el tronco del árbol para que el gato pueda descender por         sí mismo.     EducaTeach - 2025   Usar una cuerda o un lazo: Si el gato está muy arriba, intentar colocar una                       EducaTeach - 2025           cuerda o un lazo en su cuerpo de manera segura y bajarlo despacio.           Llamar al veterinario o especialista en animales: Los expertos en animales            pueden tener herramientas específicas para bajar al gato sin dañarlo.        Esperar  a  que  el  gato  baje  por  sí  mismo:  Si  el  gato  está  asustado,  puede         decidir  bajar  de  forma  autónoma  cuando  se  sienta  lo  suficientemente         seguro, especialmente si los perros y las personas se alejan.          Hacer ruido o usar un sonido familiar: Usar un sonido familiar (como el ruido         de  una  lata  de  comida  para  gatos)  para  que  el  gato  baje  al  escuchar  su        llamada.          Construir una jaula o un área segura alrededor del árbol: Si los perros son el         problema, construir una jaula o barrera alrededor del árbol para evitar que        los perros se acerquen y asusten al gato.         Tener paciencia y evitar el estrés: Asegúrate de que tanto el gato como el         entorno estén tranquilos. A veces, con el tiempo, el gato puede bajar por su        cuenta una vez que la situación se calme.         En cada una de estas soluciones, utilizaste tu razonamiento dependiendo de         la situación específica, como la altura del árbol, el comportamiento del gato         y la proximidad de los perros y las personas.                                                         Pág. 7                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                 Este razonamiento tiene un orden y secuencia, pero tiene que ser                               lógico (razonable y aplicable).                                 A este método lo llamamos algoritmo, que no es más que escribir                              y aplicar nuestro razonamiento para resolver o entender algo.                                Conozcamos  el  algoritmo  más  a  fondo,  ya  que  será  nuestra                              herramienta principal para ordenar nuestra lógica.              EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 8                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 9                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 10                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                      ¿Qué  necesita  un  algoritmo  para                                     funcionar y mostrar resultados?                                      Necesita  datos,  principalmente  estructurados  para  procesarlos  y                                   mostrar resultados según el tipo ingresado.                                    Sin datos, un algoritmo simplemente, no hace nada.                EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 11                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             Elabora un cuestionario con un mínimo de 10 preguntas.           REPASO:          Haz una lectura literal e inferencial; luego realiza el cuestionario. Tu maestro (a) de           apoyará en las definiciones y ejemplos:      EducaTeach - 2025   1. ________________________________________________________                                       EducaTeach - 2025               _____________________________________________________________________________________________              2. ________________________________________________________            _____________________________________________________________________________________________               3. ________________________________________________________             _____________________________________________________________________________________________              4. ________________________________________________________            _____________________________________________________________________________________________               5. ________________________________________________________            _____________________________________________________________________________________________                                                            Pág. 12                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          EJERCICIOS:           Escribe dentro del cuadro, el tipo de dato correcto y expone ante tus compañeros (as)           tus resultados.                        EducaTeach - 2025   Escribe un algoritmo cualitativo:          Escribe un algoritmo cuantitativo:                     EducaTeach - 2025                                                                                      Pág. 13                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            VARIABLES Y CONSTANTES              Son  dos  tipos  de  datos  de  un  algoritmo;  uno  cambia,  mientras           que el otro no lo hace.                    EducaTeach - 2025                                                                                                     EducaTeach - 2025                                      En la vida cotidiana, vemos y utilizamos estos elementos:           Cuando sale y se oculta el sol (todos los días) → Constante           La edad de una persona viva → Variable                                                         Pág. 14                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Hasta  ahora,  hemos  conocido  algunas  definiciones  necesarias  para  entender  el         fascinante mundo de la programación.           Ahora conoceremos una técnica para crear algoritmos y hacerlos funcionar. Es un           ensayo  de  cómo  darle  órdenes  a  una  computadora;  nos  referimos  al          pseudocódigo.                   EducaTeach - 2025                                                                                                     EducaTeach - 2025                                       Tu  profesor  (a)  te  apoyará  en  la  instalación  de  este  programa          simulador de algoritmos.                                                         Pág. 15                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            ÁREAS DE DEL PROGRAMA SIMULADOR PSEINT                         EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 16                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                               Antes de continuar, es necesario que recopiles información de      EducaTeach - 2025   algoritmos y su aplicación.                                                                       EducaTeach - 2025        lagunas  definiciones.  Serán  útiles  para  comprender  los                                                                                      Pág. 17                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                              Diseño UX y diseño UI            Elabora  un  cuestionario  con  un  mínimo  de  5  preguntas  con  los  temas         descritos anteriormente.            1. ________________________________________________________      EducaTeach - 2025   _____________________________________________________________________________________________     EducaTeachág. 18                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025              Los  algoritmos  trabajan  por  estructuras.  Estas  estructuras         son:          A. Estructura secuencial         B. Estructura condicional         C. Estructura cíclica (repetitiva)          Conoceremos  y  practicaremos  con  cada  uno,  haremos         ejemplos y ejercicios.         Continuemos…           A. Estructura secuencial.          Es  un  tipo  de  algoritmo  que  va  ejecutando  sus  acciones,  líneas  por  línea,  desde  un     EducaTeach - 2025     Ejemplos:                                                                                       EducaTeach - 2025         punto de inicio hasta el final.                                     Este tipo de algoritmo no retorna o se repite nuevamente hasta volver a                                               ejecutarlo desde el inicio.                                                            Pág. 19                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejemplos:            Escribir un algoritmo que solicite 10 datos y luego los sume y calcule el promedio                        EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                           Pág. 20                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             Ejercicios:           Analiza  los  siguientes  algoritmos  y  resuélvelos  aplicando  la  operación  y  secuencia           apropiada.              Pedir al usuario 5 notas de 5 cursos diferentes, sumarlos y calcular su promedio.           Pedir  al  usuario  5  nombres  y 5  notas  de          5  cursos diferentes,  sumarlos  y  calcular  su         promedio.           Pedir al usuario que ingrese un usuario y una contraseña. Luego lo muestre en pantalla           Pedir al usuario que ingrese 10 nombres de empleados y su sueldo, luego los sume para          obtener el monto total.         Luego presentar en pantalla la suma total.      EducaTeach - 2025   Pedir al usuario que solicite el nombre, su sueldo y venta mensual.                               EducaTeach - 2025          Para cada venta calcular el 5% de comisiones, luego sumarlo a su sueldo.            Crear un inventario de mercadería de productos electrónicos con los siguientes datos:          CODIGO         CANTIDAD         PRECIO          TOTAL          Luego mostrar en pantalla los 5 productos ingresados.          Crear un inventario de mercadería de productos electrónicos con los siguientes datos:          CODIGO         CANTIDAD         PRECIO          TOTAL         IVA         TOTAL_PARA_VENTA         Luego mostrar en pantalla los 5 productos ingresados.          Mostrar en pantalla el IVA y precio de venta de cada producto.                                                             Pág. 21                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            UTILIZANDO  LA  IA  PARA  NUESTROS  PROYECTOS  O          EJERCICIOS DE PROGRAMACIÓN         El uso responsable de la IA en un curso de programación puede ser una herramienta          poderosa para el aprendizaje, siempre y cuando se utilice con ética y con el objetivo de         fomentar  el  desarrollo  de  habilidades.  Aquí  tienes  algunas  recomendaciones  y         ejemplos:          1. Ventajas del uso de la IA en programación         Resolución  de  dudas:  Ayuda  a  comprender  conceptos  difíciles,  como  estructuras  de         datos, algoritmos o sintaxis de un lenguaje de programación.        Generación  de  ejemplos:  Proporciona  ejemplos  prácticos  para  ilustrar  conceptos  o         explorar ideas.         Optimización  de  código:  Ayuda  a  identificar  errores,  optimizar  código  y  aprender         buenas prácticas.     EducaTeach - 2025   avanzados relacionados con el curso.                                                              EducaTeach - 2025         Ampliación  de  conocimientos:  Sugiere  recursos  adicionales  o  explica  temas  más           Simulación  de  problemas  reales:  Proporciona  ejercicios  o  retos  personalizados  para         practicar.          2. Buenas prácticas para un uso responsable         Evitar la dependencia         Usar ChatGPT como complemento, no como sustituto del esfuerzo propio.         Intentar  resolver  un  problema  antes  de  pedir  ayuda  para  fomentar  el  aprendizaje         autónomo.          Aprender del proceso        Analizar las soluciones propuestas por el modelo para comprenderlas, no solo copiarlas.         Preguntar \"¿por qué?\" o \"¿cómo funciona esto?\" para profundizar en la lógica.          Practicar ética académica         No  usar  ChatGPT  para  hacer  trampas  en  exámenes  o  entregar  tareas  que  no  sean         propias.         Mencionar el uso de ChatGPT si se utiliza como referencia para proyectos.         Mantener la curiosidad        Usar  la  herramienta  para  explorar  temas  que  no  están  directamente  en  el  plan  de        estudios, pero que complementan el aprendizaje.                                                       Pág. 22                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         3. Ejemplos prácticos de uso responsable         Resolver errores        Si el estudiante encuentra un error en su código, puede describir el problema y pedir         ayuda para solucionarlo. Ejemplo:          \"Este es mi código en Python para calcular factoriales, pero me da un error. ¿Qué estoy         haciendo mal?\"          Aprender nuevos conceptos         Pedir explicaciones claras de temas complicados. Ejemplo:         \"¿Cómo funcionan las listas enlazadas en programación y cómo puedo implementarlas         en C++?\"           Optimización de código         Compartir un fragmento de código y preguntar cómo hacerlo más eficiente.           \"¿Hay  una  forma  más  eficiente  de  escribir  este  código  para  ordenar  un  arreglo  en     EducaTeach - 2025   Java?\"                                                                                            EducaTeach - 2025            Desafíos personalizados            Pedir ejercicios adicionales para practicar:         \"¿Puedes darme un desafío sencillo para practicar bucles y funciones en Python?\"          Refuerzo de conceptos        Solicitar analogías o ejemplos visuales para entender conceptos.          \"¿Puedes explicarme los árboles binarios con un ejemplo simple?\"          4. Límites del uso de la IA         Comprensión  limitada:  Aunque  es  una  herramienta  avanzada,  no  siempre  ofrece         soluciones perfectas y puede cometer errores. Verificar y aprender del código generado         es esencial.         Creatividad propia: El estudiante debe fomentar su habilidad de resolver problemas sin         depender completamente de herramientas externas.                                                             Pág. 23                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025           HERRAMIENTAS IA          Algunas plataformas de Inteligencia Artificial para tu apoyo para generar algoritmos:             GitHub  Copilot:  Completa  código  en  tiempo  real  usando  OpenAI  Codex.  Ideal  para           escribir funciones y soluciones rápidas.            OpenAI Codex: Convierte instrucciones en lenguaje natural a código en varios lenguajes.            Tabnine: Autocompletado de código basado en IA, compatible con múltiples editores.            Amazon CodeWhisperer: Asistente de programación para AWS y múltiples lenguajes.            Replit Ghostwriter: IDE en línea con IA para generar y depurar código.            Codeium: Herramienta gratuita de autocompletado de código para varios lenguajes.            Codiga: Mejora la calidad del código con recomendaciones y análisis de errores.     EducaTeach - 2025   ChatGPT:  herramienta  útil  para  generar  y  aprender  código,  aunque  de  una  manera         EducaTeach - 2025             diferente a las plataformas especializadas. Aquí te dejo un resumen de sus capacidades:             Características:           Generación de código: Puedes pedirle que escriba código en varios lenguajes (Python,           JavaScript,  Java,  etc.)  para  tareas  específicas,  como  resolver  algoritmos  o  crear           funciones.           Generación  de  ejemplos  y  ejercicios:  Te  puede  ayudar  a  generar  ejemplos  prácticos           para estudiar y practicar programación.            Ventajas:          Interacción en lenguaje natural: Puedes describir el problema en palabras y ChatGPT           generará código para ti.            Limitaciones:           No  siempre  perfecto:  El  código  generado  puede  no  ser  siempre  el  más  eficiente  o           adecuado para un proyecto completo. Es importante revisar y entender lo que genera.           Dependencia:  Es  importante  no  depender  completamente  de  ChatGPT  y  usarlo  para           complementar tu aprendizaje, no para hacer todo el trabajo.                                                         Pág. 24                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        B. Estructura condicional.        En programación, existen tres tipos de condicionales.  Es un tipo de algoritmo que va        ejecutando sus acciones, y toma un rumbo según la condición dada o detectada, desde        un punto de inicio hasta el final.          Hay tres tipos de algoritmos condicionales:        1. Condicional simple        2. Condicional doble        3. Condicional anidada         Ejemplos:            1. Condicional simple:        Si  la  condición  es  verdadera  mostrará      EducaTeach - 2025   no mostrará nada.                                                                                 EducaTeach - 2025       un resultado verdadero, de lo contrario                      2. Condicional doble:        Si la condición es verdadera mostrará        un  resultado  verdadero,  de  lo        contrario mostrará un resultado falso.          Ejemplo:                                                                Pág. 25                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025       En esta condicional tendremos dos opciones: verdadera o falsa.       Si se cumple la verdadera, no se cumplirá la falsa.        Si se cumple la falsa, no se cumplirá la verdadera.        No pueden a ver dos resultados al mismo tiempo.           3. Condicional anidada:          Aquí dependerá del resultado. No se limita a dos, sino las veces que el programador          (a) desee mostrar según los datos recibidos.          Ejemplo:                EducaTeach - 2025                                                                                                     EducaTeach - 2025                      Por cada condicional, habrá un fin sí para cerrar la condición dentro del algoritmo.                                         En  los  algoritmos  anteriores  utilizamos  los  operadores  de                                   comparación. Este tipo de algoritmo será el que utilizaremos en la                                  mayoría de ejercicios para mostrar resultados.                                                              Pág. 26                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             Más ejemplos:        Algoritmos con condicional simple.                     EducaTeach - 2025                                                                                                     EducaTeach - 2025                           USO DE OPERADORES ARITMÉTICOS         Pedir  al  usuario que ingrese  4 datos y         los sume.         Si  la  suma  es  igual  o  mayor  a  1000,         mostrar un mensaje que hay suficiente         dinero en caja.                                                               Pág. 27                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                     Pedir  al  usuario  que  ingrese  el        sueldo  y  el  bono,  luego,  luego        los sume.        Si  la  suma  es  igual  o  mayor  a        3000,  mostrar  un  mensaje  que        indique  que  gana  el  sueldo        mínimo.       EducaTeach - 2025                                                                                                     EducaTeach - 2025                         Algoritmo condicional doble.         Solicitar 4 notas, luego indicar si       es     mayor      a     70,     escribir       “Aprobado  con  nota  aceptable        “,  de  lo  contrario  escribir        “Aprobado, pero con nota baja”.                                                                Pág. 28                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                           Condicion_anidada                                                                    Condicional anidada.                                                                   Pedir al usuario que ingrese el sueldo y el                                                                  bono, luego, luego los sume.                                                                  Si  la  suma  es  igual  o  mayor  a  3000,                                                                   mostrar un mensaje que indique que gana                                                                  el  sueldo  mínimo.  De  lo  contrario  un                                                                  mensaje  que  indique  que  no  gana  el                                                                  sueldo mínimo.            EducaTeach - 2025                                                                                                     EducaTeach - 2025                Pedir al usuario que ingrese las ventas        del mes y los sume.        Si  la  suma  es  menor  o  igual  a  5000,        presentar  un  mensaje:  “Tiene  una        comisión del 2%”.        Si la  suma  es  menor  o igual  a 10000,        presentar  un  mensaje:  “Tiene  una        comisión del 5%”.        Si la  suma  es  menor  o igual  a 15000,        presentar  un  mensaje:  “Tiene  una        comisión del 7%”.        Si la  suma  es  menor  o igual  a 20000,        presentar  un  mensaje:  “Tiene  una        comisión del 10%”.                                                             Pág. 29                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Ejercicios:  analiza  los  siguientes  algoritmos  y  resuélvelos  aplicando  la  operación  y         condicional apropiada.           Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”           Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”          Si el promedio es mayor a 75, mostrar un mensaje: “Tu promedio es aceptable”            Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio está entre 60 y 65, mostrar un mensaje “Tu promedio es muy bajo”          Si el promedio está entre 75 y 80, mostrar un mensaje: “Tu promedio es aceptable”          Si el promedio está entre 81 y 90, mostrar un mensaje: “Tu promedio es alto”          Si  el  promedio  está  entre  91  y  100,  mostrar  un  mensaje:  “Tu  promedio  es          sobresaliente”            Pedir al usuario que ingrese un usuario y una contraseña.     EducaTeach - 2025   mostrar un mensaje “Contraseña incorrecta, cuenta bloqueada”                                      EducaTeach - 2025         Si la contraseña es igual a “HOLA”, mostrar un mensaje bienvenido. De lo contrario              Pedir  al  usuario  que  ingrese  2  datos,  luego  los  sume,  reste,  multiplique,  divida  y          obtenga el promedio.          Luego  presentar  en  pantalla  la  suma,  la  resta,  la  multiplicación,  la  división  y  el          promedio.            Pedir al usuario que elija un menú de comida rápida:          1. Pizza          2. Hamburguesa          3. Ensaladas          4. Pollo frito          5. Pollo asado          6. Bebidas          Según la opción elegida, mostrar el producto seleccionado y el precio a pagar.            Pedir  al  usuario  que  solicite  una  opción  de  compra  de  productos  electrónicos  y  el          monto.          Si el monto es mayor a 5000, hacer un descuento del 5%.          Si la compra es mayor a 7000, hacer un descuento del 7%.         Si la compra es mayor a 10000, hacer un descuento del 10%.                                                       Pág. 30                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            C. Estructura repetitiva (cíclica).         Es  un  tipo  de  algoritmo  que  va  ejecutando  sus  acciones,  y  se         repite las veces necesarias que el programador desee, desde un         punto de inicio hasta el final.          Se utiliza cuando se quiere repetir un conjunto de sentencias un         número  determinado  de  veces  o  mientras  se  mantenga  el         cumplimiento de una condición.          Ejemplo:            EducaTeach - 2025                                                                                                     EducaTeach - 2025                                    En el algoritmo anterior, irá sumando el dato que el usuario ingrese hasta llegar a 100.         Si llega a 100 o sobre pasa el bucle se detendrá, de lo contrario seguirá solicitando un         dato.                                                         Pág. 31                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025              TIPOS DE BUCLES:           1. Bucle while → mientras           2. Bucle for → para             1. Bucle while → mientras:           Su función principal es mantener en ejecución un fragmento de código mientras la           condición asociada al while (mientras) permanezca verdadera.            Un bucle while (mientras) permite repetir la ejecución de un grupo de instrucciones           mientras se cumpla una condición (es decir, mientras la condición tenga el valor True           (verdadera)).            La sintaxis del bucle while (mientras) es la siguiente:            Mientras condicion:     EducaTeach - 2025   FinMientras                                                                                       EducaTeach - 2025               cuerpo del bucle              La ejecución de esta estructura de control while (mientras) es la siguiente:             Si el resultado es True (verdadero) se ejecuta el cuerpo del bucle.            Una vez ejecutado el cuerpo del bucle, se repite el proceso (se evalúa de nuevo la           condición  y,  si  es  cierta,  se  ejecuta  de  nuevo  el  cuerpo  del  bucle)  una  y  otra  vez           mientras la condición sea cierta.            Si  el  resultado  es  False  (falso),  el  cuerpo  del  bucle  no  se  ejecuta  y  continúa  la           ejecución del resto del programa.            La variable o las variables que aparezcan en la condición se suelen llamar variables de           control.            Las variables de control deben definirse antes del bucle while (mientras) y modificarse           en el bucle Mientras.            Ejemplo:                                                         Pág. 32                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025              Sintaxis:                                                                                Todo algoritmo tiene tres etapas:                                                                            Entrada                                                                           Proceso                                                                           Salida                                                                           El bucle es parte del proceso.            EducaTeach - 2025   Ejemplo 1:                                                                                        EducaTeach - 2025             Solicitar al usuario que ingrese un dato numérico. Si es positivo o 0 le seguirá pidiendo          otro dato hasta que ingrese un dato negativo.                                                                                Pág. 33                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025               Ejemplo 2:        Solicitar  al  usuario  que  ingrese  un        dato  numérico.  Lo  sumará  hasta        llegar a 1000. Si llega a 1000 dejará        de solicitar más datos.               EducaTeach - 2025           ¿Por qué establecemos las variables en 0?                                                 EducaTeach - 2025                                    Porque  debemos  indicar  en  número  iniciará  el  bucle  o  las                                 operaciones. De lo contrario, dará error, ya que la operación debe                                     iniciar en algún número neutro, negativo o positivo.        Solicitar al usuario una contraseña. Si acierta, mostrará un mensaje de bienvenida.                                                                            Pág. 34                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Solicitar  al  usuario  una  contraseña.  Si  acierta,  mostrará  un  mensaje  de  bienvenida.         Solo tendrá 5 intentos, de lo contrario mostrará un error que la cuenta está bloqueada.                         EducaTeach - 2025                                                                                                     EducaTeach - 2025                  Contar del 1 al 1000 automáticamente:                                                                              Pág. 35                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Solicitar  al  usuario  5  nombres  de  empleados  y  su  sueldo.  Al llegar  a  5  empleados  se        detendrá.                         EducaTeach - 2025   Solicitar  al  usuario  5  nombres  de  empleados  y  su  sueldo.  Al  llegar  a  5  empleados  o   EducaTeach - 2025          20000 en monto se detendrá el bucle.                                                                                   Pág. 36                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Nota:        En el programa PSeInt no es posible interrumpir el bucle formalmente, únicamente en         otros lenguajes reales de programación.                  Solicitar un usuario y contraseña por        5  veces.  Si  los  datos  son  correctos        mostrar un mensaje de bienvenida.          EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 37                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejercicios:         Analiza los siguientes algoritmos y resuélvelos aplicando la acción correcta (bucle).          Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.         Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”          Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.         Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”         Si el promedio es mayor a 75, mostrar un mensaje: “Tu promedio es aceptable”           Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.         Si el promedio está entre 60 y 65, mostrar un mensaje “Tu promedio es muy bajo”         Si el promedio está entre 75 y 80, mostrar un mensaje: “Tu promedio es aceptable”         Si el promedio está entre 81 y 90, mostrar un mensaje: “Tu promedio es alto”         Si el promedio está entre 91 y 100, mostrar un mensaje: “Tu promedio es sobresaliente”           Pedir al usuario que ingrese una contraseña por 5 veces.         Si  la  contraseña  es  igual  a  “ADMIN_2024”,  mostrar  un  mensaje  bienvenido.  De  lo     EducaTeach - 2025   contrario mostrar un mensaje “Contraseña incorrecta, cuenta bloqueada”                            EducaTeach - 2025            Pedir al usuario que ingrese un usuario y una contraseña por 10 veces.         Si el usuario es igual a “COLEGIO” Y la contraseña es igual a “ADMIN_2024”, mostrar un         mensaje  bienvenido.  De  lo  contrario  mostrar  un  mensaje  “Contraseña  incorrecta,         cuenta bloqueada”           Pedir  al  usuario  que  ingrese  2  datos,  luego  los  sume,  reste,  multiplique,  divida  y         obtenga el promedio.         Luego  presentar  en  pantalla  la  suma,  la  resta,  la  multiplicación,  la  división  y  el         promedio.         Pedir al usuario 5 datos, luego:         Sumarlos         Promediarlos         Indicar si es par o impar          Pedir al usuario que solicite una opción de compra de productos electrónicos y el monto         por 10 veces.         Si el monto es mayor a 5000, hacer un descuento del 5%.         Si la compra es mayor a 7000, hacer un descuento del 7%.         Si la compra es mayor a 10000, hacer un descuento del 10%.                                                         Pág. 38                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025               Elabora  un  cuestionario  con  un  mínimo  de  5  preguntas  con  los  temas  descritos           anteriormenteducaTeach - 2025   4. ________________________________________________________                                       EducaTeach - 2025                _____________________________________________________________________________________________               5. ________________________________________________________             _____________________________________________________________________________________________                                                                               Pág. 39                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         1. Bucle for → para:         Un  bucle  for  es  un  bucle  que  repite  el          bloque  de  instrucciones  un  número         predeterminado de veces.           El bloque de instrucciones que se repite         se  suele  llamar  cuerpo  del  bucle  y  cada         repetición se suele llamar iteración.           El  bucle  Para  se  utiliza  cuando  ya  se         conoce  el  número exacto  de iteraciones         que se deben realizar.           La estructura básica es la siguiente:          Para variable <- valor Inicial Hasta valor          Final Con paso paso Hacer            // Código a repetir en cada iteración     EducaTeach - 2025   FinPara                                                                                           EducaTeach - 2025                        Solicitar al usuario una contraseña        durante  5  veces.  Si  acierta,        mostrará        un       mensaje        de        bienvenida.                                                                 Pág. 40                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Solicitar al usuario una contraseña y código de acceso. Si acierta, mostrará un mensaje         de bienvenida. Solo tendrá 10 intentos, de lo contrario mostrará un error que la cuenta          está bloqueada.                        EducaTeach - 2025                                                                                                     EducaTeach - 2025                       Contar del 1 al 100,000 automáticamente:                                                                             Pág. 41                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Solicitar al usuario 10 nombres de empleados y su sueldo.                          EducaTeach - 2025   Solicitar al usuario 5 nombres de empleados y su sueldo. Al llegar a 5 empleados o                EducaTeach - 2025           20000 en monto se detendrá el bucle.                                                                                   Pág. 42                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Nota:        En  el  programa  PSeInt  no  es  posible  interrumpir  el  bucle  para  formalmente,         únicamente en otros lenguajes reales de programación.          Solicitar un usuario, una contraseña y un código de acceso por 5 veces. Si los datos son         correctos mostrar un mensaje de bienvenida.                    EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 43                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Ejercicios:        Analiza los siguientes algoritmos y resuélvelos aplicando la acción correcta (bucle).             Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”           Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio es igual o menor a 60, mostrar un mensaje “Tu promedio es muy bajo”          Si el promedio es mayor a 75, mostrar un mensaje: “Tu promedio es aceptable”           Pedir al usuario 10 notas de 10 cursos diferentes, sumarlos y calcular su promedio.          Si el promedio está entre 60 y 65, mostrar un mensaje “Tu promedio es muy bajo”          Si el promedio está entre 75 y 80, mostrar un mensaje: “Tu promedio es aceptable”          Si el promedio está entre 81 y 90, mostrar un mensaje: “Tu promedio es alto”          Si  el  promedio  está  entre  91  y  100,  mostrar  un  mensaje:  “Tu  promedio  es          sobresaliente”            Pedir al usuario que ingrese una contraseña por 5 veces.     EducaTeach - 2025   Si  la  contraseña  es  igual  a  “ADMIN_2024”,  mostrar  un  mensaje  bienvenido.  De  lo        EducaTeach - 2025             contrario mostrar un mensaje “Contraseña incorrecta, cuenta bloqueada”            Pedir al usuario que ingrese un usuario y una contraseña por 10 veces.          Si el usuario es igual a “COLEGIO” Y la contraseña es igual a “ADMIN_2024”, mostrar un          mensaje  bienvenido.  De  lo  contrario  mostrar  un  mensaje  “Contraseña  incorrecta,          cuenta bloqueada”           Pedir  al  usuario  que  ingrese  2  datos,  luego  los  sume,  reste,  multiplique,  divida  y          obtenga el promedio.          Luego  presentar  en  pantalla  la  suma,  la  resta,  la  multiplicación,  la  división  y  el          promedio.          Pedir al usuario 5 datos, luego:          Sumarlos          Promediarlos          Indicar si es par o impar          Pedir  al  usuario  que  solicite  una  opción  de  compra  de  productos  electrónicos  y  el          monto por 10 veces.          Si el monto es mayor a 5000, hacer un descuento del 5%.         Si la compra es mayor a 7000, hacer un descuento del 7%.         Si la compra es mayor a 10000, hacer un descuento del 10%.                                                        Pág. 44                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                                                     PSEINT                                                                                        PSEUDOCÓDIGO                                                                                        INTRODUCCIÓN                                                   Presaberes                            ALGORITMOS SECUENCIALES                                                                                        ALGORITMOS CONDICIONALES                                                                                        ALGORITMOS CÍCLICOS           EducaTeach - 2025          Unidad 2                                                                                   EducaTeach - 2025                                                                                                  INTRODUCCIÓN                                                                                        ALGORITMOS SECUENCIALES                                                       Crear                            PYTHON                                                                                         ALGORITMOS CONDICIONALES                                                                                        ALGORITMOS CÍCLICOS                                                                                        TUPLAS                                                                                        DICCIONARIOS                                                                                        LISTAS                                                                                        MANEJO DE ERRORES                                                                         Pág. 45                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                            EducaTeach - 2025      INTRODUCCIÓN AL LENGUAJE DE                                                                    EducaTeach - 2025                                                  PROGRAMACIÓN                                                        PHYTON               ¿QUÉ APRENDERÁS?             RAZONAMIENTO LÓGICO, PROGRAMACIÓN CON LENGUAJE REAL (ALTO NIVEL)             SOLUCIOBES Y TÉCNICAS             ESTRATEGIAS             ATAJOS A MEJORES RESULTADOS, Y MUCHO MÁS…                                                                            Pág. 46                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                      Python →                  Es un lenguaje de programación de alto nivel, potente y fácil de aprender.           Tiene estructuras de datos de alto nivel eficientes y un simple pero efectivo sistema de        programación orientado a objetos.       EducaTeach - 2025  La elegante sintaxis de Python y su tipado dinámico, junto a su naturaleza interpretada            EducaTeach - 2025         lo convierten en un lenguaje ideal para scripting y desarrollo rápido de aplicaciones en         muchas áreas, para la mayoría de plataformas.          Es  un  lenguaje  de  programación  ampliamente  utilizado  en  las  aplicaciones  web,  el            desarrollo de software, la ciencia de datos y el machine learning (ML).         Los desarrolladores utilizan Python porque es eficiente y fácil de aprender, además de        que se puede ejecutar en muchas plataformas diferentes.          El  intérprete  de  Python  es  fácilmente  extensible  con  funciones  y  tipos  de  datos         implementados en C o C++ (u otros lenguajes que permitan ser llamados desde C).          Python  también  es  apropiado  como  un  lenguaje  para  extender  aplicaciones         modificables.         Pretende  introducir  muchas  de  las  funcionalidades  más  notables  y  dar  una  idea  del         estilo y el tipo de lenguaje.         Después de leerlo podrás leer y escribir módulos y programas en Python y estarás listo         para aprender sobre varias librerías y módulos descritos en La Biblioteca Estándar de         Python.                                                          Pág. 47                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Elabora un cuestionario con un mínimo de 23 preguntas con los temas siguientes:           QUÉ ES UN IDE EN PROGRAMACIÓN         LENGUAJE DE PROGRAMACIÓN          LENGUAJE DE ALTO NIVEL          LENGUAJE DE BAJO NIVEL         LENGUAJE DE MÁQUINA         CÓD  GO BINARIO              I          LENGUAJE PYTHON         VISUAL STUDIO 2022          VISUAL STUDIO CODE         ANDROID STUDIO          KOTLIN         Xcode          COMPILADOR EN PROGRAMACIÓN         INTÉRPRETE EN PROGRAMACIÓN          SINTAXIS EN PROGRAMACIÓN         CÓDIGO FUENTE          QUÉ ES UN SCRIPT         ARCHIVO .EXE (EJECUTABLE)         ARCHIVO .APK (EJECUTABLE)          QUÉ ES UNA TERMINAL EN PROGRAMACIÓN     EducaTeach - 2025   FRONTEND                                                                                          EducaTeach - 2025         QUÉ ES ASSEMBLER EN PROGRAMACIÓN           BACKEND             cág. 48                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeachducaTeach - 2025   _____________________________________________________________________________________________     EducaTeachág. 49                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeachython contiene una gran cantidad de librerías, tipos de datos y funciones incorporadas en el propio lenguaje,        que ayudan a realizar muchas tareas comunes sin necesidad de tener que programarlas desde cero. Pero lo         que realmente le hace brillante utilizándolo en una Raspberry Pi, es por la capacidad de poder utilizar los        pines GPIO para conectar el mundo físico con el mundo digital.         ¿Qué es un tipo de dato?        En programación un tipo de dato es la forma de representación del dato e indica la clase de dato que se va a         manejar. Esto incluye imponer restricciones en los datos, como qué valores pueden tomar y qué operaciones        se pueden realizar.      EducaTeach - 2025     C# es    un lenguaje de programación de propósito general y por ello contiene una gran cantidad de tipos de   EducaTeach - 2025           datos con los que se puede programar.          Tipos de datos comunes         Numéricos: En Visual C# los números pueden ser enteros, flotantes o complejos.          Booleanos: Los tipos de datos booleanos se utilizan para representar verdadero y falso, mediante las palabras        reservadas True o False respectivamente. Este tipo de datos es muy importante en para el control de flujo de         un programa como veremos en las siguientes lecciones.          Cadenas: Aunque las cadenas no son usualmente importantes para análisis numérico, sí lo son para mostrar        resultados  por  la  terminal  o  shell.  Una  cadena  debe  delimitarse  con  comillas  simples  o  dobles  y  admite         caracteres de escape.          Listas: Una lista es una colección de objetos: números enteros, flotantes, complejos, cadenas, etc. Una lista se         delimita  utilizando  []  y  sus  elementos  han  de  separarse  con  comas.  Es  posible  acceder  a  sus  elementos         indicando el índice del elemento deseado.         Tuplas: En muchos sentidos una tupla es como una lista, contienen una colección de objetos de distinto tipo.         Es decir, son lista de elementos de diferente tipo de dato.           Diccionario: Un diccionario se compone de dos partes: una llave (palabra) y un valor (definición). Las llaves        siempre deben ser un tipo de dato primitivo. La llave y el valor se separan con: y sus elementos con comas.                                                          Pág. 50                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 TIPOS DE DATOS EN                    PYTHON                       EducaTeach - 2025   SINTAXIS: Ejemplo de la suma de dos datos enteros                                                 EducaTeach - 2025                                                Declaración del        unción para crear una entrada  pausa  y                                  po de dato          esperar a que el usuario ingre un dato            Declaración de la                variable            Creación de fórmula              para sumar                                                                    Establecer mensaje para                                                                    orientar al usuario lo que                                                                          debe hacer                                        unción para presentar resultado                                                       Pág. 51                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            ¿Qué es una variable?          Se define como variable al espacio reservado de la memoria que almacena un dato,          que como su propio nombre indica, puede cambiar de valor en tiempo de ejecución.           En  Python  tenemos  tipos  de  datos  simples  (números  enteros,  de  coma  flotante)          cadenas de texto, y valores booleanos.          Ejemplo:          Int x          ¿Qué ES UNA CONSTANTE?          Es un dato que no cambia durante la ejecución de un programa.          Ejemplo:          Int a=25            Operadores aritméticos          En  la  lección  anterior  se  decía  que  Python  es  un  lenguaje  de  programación  que          soporta el paradigma de la programación funcional. Esto quiere decir que está basada      EducaTeach - 2025     La mayoría de lenguajes de programación utilizan los mismos operadores aritméticos.             EducaTeach - 2025         en una programación declarativa de funciones matemáticas.               Al  hacer  operaciones  con  números  enteros  y  decimales  el  resultado  es  siempre          decimal, por ejemplo, en el caso de dividir 6 entre 2.            Por otro lado, en el caso de que el resultado no tenga parte decimal, Python escribe 0          como parte decimal para indicar que el resultado es un número decimal.           Operadores lógicos          Los operadores lógicos son utilizados en la mayoría de las ocasiones en las estructuras          condicionales.            A modo de ejemplo, podemos abrir el IDLE de Python y escribir directamente en la          consola diferentes tipos de operaciones lógicas.           Observa  que  los  resultados  que  devuelven  las  operaciones  lógicas  son  de  tipo          booleano, es decir, verdadero (True) o falso (False).                                                              Pág. 52                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          ENTRADAS Y SALIDAS DE DATOS         Salidas en Python         La función print() es sin duda una de las instrucciones más sencillas y que usaremos en el         curso, ya que nos permite mostrar información por consola como mensajes, números o         valores de una variable. para su uso solo le pasamos en los argumentos lo que deseamos         mostrar en consola.             Entradas en Python         La función input() permite obtener información del en la terminal desde el teclado, al         momento de ejecutarse esta línea en la consola esperara que ingresemos el texto que         necesitemos  y  demos  un  enter  para  continuar  y  guardar  el  valor  capturado  en  una         variable de programa.         EducaTeach - 2025       Mas ejemplos de entrada y salida de datos                                                     EducaTeach - 2025                                                                                 Entrada                    Salida                             Entrada                                                                                             Salida                                                           Pág. 53                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             1. Algoritmos secuenciales               Pedir 5 datos generales a un usuario y presentarlo en pantalla:                         EducaTeach - 2025                                                                                                     EducaTeach - 2025                    Pedir 5 datos generales a un usuario y presentarlo en pantalla de manera concatenada:                                                                                  Pág. 54                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          NOTA:  Para  la  concatenación   unión   de  datos,  utilizamos  el  operador  “+”.  Esto  no         significa  que  sumará  o  hará  una  operación  matemática  ya  que  son  datos  de  tipo        cadena.         Si todos los datos fueran de tipo int o float, entonces si habrá operación matemática.            Calcular el perímetro de un triángulo:                     EducaTeach - 2025                                                                                                     EducaTeach - 2025                   Calcular la suma y producto de dos números:                                                                                      Pág. 55                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 Calcular el área de un rectángulo:                              Calcular las horas trabajadas de un empleado:     EducaTeach - 2025                                                                                                     EducaTeach - 2025                                  Calcular  el  promedio  de        4 números:                                                                 Pág. 56                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejercicios para analizar y resolver:             Pedir  al  usuario  que  ingrese  la  nota  de  4  unidades,  calcule  el  promedio  y  luego          presente en pantalla el resultado.            Pedir al usuario que ingrese un nombre, la nota de 4 unidades, calcule el promedio y           luego presente en pantalla el resultado.           Solicitar 10 datos a un usuario y desplegar individualmente de manera vertical.            Solicitar  10  datos  a  un  usuario  y  desplegar  de  manera  resumida  horizontalmente.           Debes concatenar los datos.            Pedir 10 notas de 10 cursos a un usuario y mostrar en pantalla el resumen de forma          vertical y el promedio.            Resolver la ecuación A =   X + Y + Z  *  B + C  /10           Resolver la fórmula  A + B ³     EducaTeach - 2025   Mostrar hora actual del Sistema  investigar import datetime en Python                             EducaTeach - 2025               Mostrar descripción de hardware de Sistema  investigar import platform en Python             Resolver la ecuación de primer grado: 2X + 20 = 4X + 10           Pedir al usuario que ingrese 10 nombres de empleados y su sueldo, luego los sume           para obtener el monto total.          Luego presentar en pantalla la suma total.            Pedir al usuario que solicite el nombre, su sueldo y venta mensual.           Para cada venta calcular el 5% de comisiones, luego sumarlo a su sueldo.            Crear  un  inventario  de  mercadería  de  productos  electrónicos  con  los  siguientes          datos:           CODIGO          CANTIDAD           PRECIO          TOTAL           Luego mostrar en pantalla los 5 productos ingresados.                                                             Pág. 57                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          1.1 Contadores y acumuladores           Un  contador  es  una  variable  que  va          incrementando  o  decrementando  según  el         usuario indique, ejemplo:          Cliente = 0 cliente = cliente + 1            En  el  caso  anterior  la  variable  cliente  irá         incrementando de uno en uno.          Antes  debe  iniciar  en  0,  de  lo  contrario         mostrará un error.             Ejemplo de contador        EducaTeach - 2025   Acumuladores                                                                                      EducaTeach - 2025              Un acumulador es una variable que va cambiando de cantidad (si es numérica) si el usuario sige ingresando         datos.          Ejemplo:         suma_total = 0 suma_total = suma_total + suma         En el caso anterior la variable suma_total irá incrementando de cantidad porque estará sumando lo que lleva          más lo que se le dará.         Antes debe iniciar en 0, de lo contrario mostrará un error.          Ejemplo de acumulador ↓                                                                               Pág. 58                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025              Ejercicios para analizar y resolver:           Pedir  al  usuario  10  datos,  llevar  la  cuenta  de  los  datos  ingresados  y  mostrar  en          pantalla la suma total y la cuenta de los números ingresados.           Sumar 10 veces un mismo número.          Restar 10 veces un mismo número.          Dividir 10 veces un mismo número           Multiplicar 10 veces un mismo número                 2. Condicionales en Python     EducaTeach - 2025   La       estructura  de  control  if  ...  permite  que  un  programa  ejecute  unas  instrucciones   EducaTeach - 2025               cuando se cumplan una condición. En inglés \"if\" significa \"si\"  condición .         Exis         Con  ten 3 tipos:              dicional simple         Con  dicional doble         Con  dicional anidada           2.1. Algoritmos con condicional simple:         Muestra un resultado sólo si es verdadero. Si es falso no mostrará nada.           Ejemplo:             Solicitar  la  edad  de  un usuario.  Si es mayor  o  igual 18  años, mostrará  un mensaje           “Eres mayor de edad”                                                                  Pág. 59                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Pedir al usuario que ingrese un número positivo.                 Pedir dos datos e indicar si el segundo es el mayor.                        un sueldo e indicar si debe pagar impuesto.        Pedir       EducaTeach - 2025                                                                                                     EducaTeach - 2025                   Solicitar dos datos e indicar si alguno es mayor a 5.                   Calcular el valor absoluto de un número.                                                                 Pág. 60                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             Pedir un número y comparar si es igual a 1000.                          2.2. Algoritmos con condicional doble:           Muestra un resultado sólo si es verdadero. Si es falso mostrará otro.          Tiene dos opciones.          Ejemplo:          Pedir una edad e indicar si mayor o menor de edad.      EducaTeach - 2025                                                                                                     EducaTeach - 2025                       Pedir una contraseña e indicar si es correcta.                    Solicitar dos datos e indicar si es divisible.                                                                Pág. 61                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             Solicitar una nota e indicar si el alumno a ha aprobado.                    Solicitar  los  años  de         uso de la computadora         e indicar si es nueva o         usada.       EducaTeach - 2025                                                                                                     EducaTeach - 2025                    Leer     tres    números          enteros y, si el primero          de  ellos  es  negativo,          calcular el producto de          los  tres,  en  caso          contrario  calcular  la          suma         de       ellos.          Ejemplo:              Calcule las raíces reales, de una ecuación de segundo grado.          La forma de una ecuación de segundo grado es Ax2 + Bx + C, para este caso se debe          tener presente el valor de la discriminante. Para el algoritmo se procede a calcular las          raíces solo si la discriminante es mayor a CERO.                                                          Pág. 62                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                 2.3. Algoritmos con condicional anidada:     EducaTeach - 2025   de las condiciones programadas.                                                                   EducaTeach - 2025          Muestra un resultado según se cumpla la condición. No se limita a dos, sino dependerá             Ejemplo:            Solicitar al usuario que ingrese una vocal y detectar que vocal fue ingresada.                                                                             Pág. 63                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            Solicitar dos colores y hacer una mezcla según los colores elegidos.                        EducaTeach - 2025                                                                                                     EducaTeach - 2025                        Solicitar dos datos e indicar cual es el menora, mayor o si son iguales.                                                                          Pág. 64                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Solicitar un día de la semana e indicar si está cerca del fin de semana.                             Solicitar un dato al usuario e indicar si está entre A, B y C.     EducaTeach - 2025                                                                                                     EducaTeach - 2025                                Algoritmo  que  permita  efectuar  el  cálculo  del  área  de  un  círculo  o  un  triángulo          equilátero según la opción seleccionada por el usuario a través de un menú, además se          deben ingresar los datos adicionales que se requieran para el cálculo del área.                                                              Pág. 65                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                                 Pág. 66                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                                CICLOS EN PHYTON                Es una secuencia de instrucciones de código que se ejecuta repetidas veces, hasta que la         condición asignada a dicho bucle deja de cumplirse.           Los dos bucles más utilizados en programación son el bucle while, y el bucle for.          CICLO WHILE          El propósito de este  ciclo, es  repetir un  bloque  de  código  mientras una  condición  se     EducaTeach - 2025  mantenga verdadera.                                                                                EducaTeach - 2025         x = 1          while(x <= 10):                  print(x)                   x = x+1         CICLO FOR         En general, la estructura for se usa en aquellas situaciones en las cuales CONOCEMOS la        cantidad de veces que queremos que se ejecute el bloque de instrucciones.         Conocemos de antemano la cantidad de veces que queremos que el bloque se repita.          word = input(\"Introduce una palabra: \")        for i in range(10):             print(word)                                                                  Pág. 67                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Ejemplo de bucle while         Solicitar  el  nombre  del  curso  por  tres  intentos.  Si  es  PROGRAMACIÓN,  mostrar  un         mensaje “Bienvenido  a  al curso”                         Solicitar  el  nombre  del  curso  y  del  profesor  por  tres  intentos.  Si  el  curso  es         PROGRAMACIÓN y profesor PROGRAMADOR, mostrar un mensaje “Bienvenido  a  al     EducaTeach - 2025                                                                                                     EducaTeach - 2025         curso”                                                                                      Un  jefe  de  ventas  desea  un  sistema                                                                         que  calcule  el  sueldo  real  de  3                                                                        trabajadores.                                                                       1. Al sueldo inicial se descontarán de                                                                        IVA  12%  y  el  seguro  obligatorio  de                                                                        IGSS que es el 4.83%.                                                                         2. Mostrar en pantalla los descuentos                                                                       aplicados                                                          Pág. 68                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 Crear  un  menú  de  opciones  con  las  4        operaciones básicas.         Solicitar dos datos al usuario.        Por  medio  de  un  ciclo  solicitar  una        opción  y  mostrar  la  operación  según  lo         solicitado.          EducaTeach - 2025                                                                                                     EducaTeach - 2025                         Crear una casa                                                                        Pág. 69                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                  Ejemplos con bucle for         Pedir al usuario 5 datos y mostrar la suma en tiempo real.                      EducaTeach - 2025                                                                                                     EducaTeach - 2025                       Pedir al usuario 5 datos y mostrar la suma al final                                                                         Pág. 70                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025              Contar        del       0       al       10         automáticamente  y  sumar  todos         los números                Contar del 0 al 5000 automáticamente             Ejercicios: analiza los problemas y aplica las soluciones apropiadas por medio del bucle for.         Solicitar 5 datos, sumarlos y fuera del bucle mostrar un mensaje en pantalla si es positivo.     EducaTeach - 2025   Solicitar 5 datos, sumarlos y fuera del bucle mostrar un mensaje en pantalla si es positivo o negativo.   EducaTeach - 2025         Solicitar 5 datos, sumarlos y fuera del bucle mostrar un mensaje en pantalla si es negativo.         Solicitar 5 datos, sumarlos y fuera del bucle mostrar un mensaje en pantalla si es positivo, negativo o neutro.           A 5 alumnos (as), solicitar la nota de 2 parciales, 2 ejercicios y el examen final del curso de programación.             Sumar todos los punteos y dentro del ciclo mostrar en pantalla si aprobó o no aprobó la unidad.        A 3 alumnos (as), solicitar la nota de la unidad 2 del curso de programación, si es mayor o igual a 60 mostrar         un mensaje “Aprobado  a ”, si la nota es menor a 60 mostrar un mensaje “No aprobado  a ”. Todo  deberá         programarlo dentro del bucle.          Crear una calculadora con las 4 operaciones generales, pidiendo al usuario 2 números.         Solicitar al usuario una contraseña, si no acierta durante 3 veces, bloquear el acceso.         Llevar la cuenta de los intentos. Si acierta mostrar un mensaje.          Solicitar al usuario su usuario y contraseña por 5 veces, si no acierta, bloquear el acceso y        mostrar un mensaje de bloqueo temporal. Si acierta mostrar un mensaje.           Solicitar al usuario lo siguiente:         Que ingrese cualquiera de 2 usuarios y dos contraseñas, si no acierta bloquear el acceso.         Si acierta mostrar un mensaje.         Solicitar al usuario un código de acceso, si es correcta solicitar su usuario y su contraseña.         Si no acierta bloquear el acceso. Si acierta mostrar un mensaje.         Solicitar al usuario que ingrese el nombre de 5 programas para evaluar si es compatible        con  el  Sistema  Operativo,  si  es  compatible  instalarlo,  de  lo  contrario  mostrar  un  mensaje  que  no  es        compatible.                                                      Pág. 71                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            CALCULADORA BÁSICA:          n1 = float(input(\"Introduce tu primer número: \") )         n2 = float(input(\"Introduce tu segundo número: \") )          opcion = 0         while True:             print(\"\"\"             Dime, ¿qué quieres hacer?               1) Sumar los dos números             2) Restar los dos números             3) Multiplicar los dos números             4) Cambiar los números elegidos             5) Apagar calculadora             \"\"\")     EducaTeach - 2025       opcion = int(input(\"Elige una opción: \") )                                                    EducaTeach - 2025                if opcion == 1:                 print(\" \")                 print(\"RESULTADO: La suma de\",n1,\"+\",n2,\"es igual a\",n1+n2)             elif opcion == 2:                 print(\" \")                 print(\"RESULTADO: La resta de\",n1,\"-\",n2,\"es igual a\",n1-n2)             elif opcion == 3:                 print(\" \")                 print(\"RESULTADO: El producto de\",n1,\"*\",n2,\"es igual a\",n1*n2)             elif opcion == 4:                 n1 = float(input(\"Introduce tu primer número: \") )                 n2 = float(input(\"Introduce tu segundo número: \") )             elif opcion == 5:                 break             else:                 print(\"Opción incorrecta\")                                                              Pág. 72                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                  3. LISTAS (ARREGLOS)                 Listas (arrays, arreglos o vectores) en Python. Uso y creación de listas en Python          Las listas en Python forman parte de lo que se conoce como estructuras de datos que          nos ofrece Python (son un tipo de array).          En otros lenguajes de programación, se los conoce como vectores.            Dentro de una variable podemos almacenar varios datos de diferentes tipos.          Se acceden a estos datos por medio de una posición (índice).          Esta posición o índice inicia en 0.      EducaTeach - 2025   Ejemplo:                  0  1  2  3   4  5  6  7                                                 EducaTeach - 2025                                       array1 = [A, B, C, D, E,  , G, H]          ¿Cómo acceder a elementos de una lista?           Ejemplo:          mylist = [\"apple\", \"banana\", \"cherry\"]           Sabemos que los datos se almacenan por orden de un índice que inicia desde 0.          Por lo tanto, si deseamos acceder y mostrar la palabra banana, deberemos escribir el          número 1. Entonces sería así:            print(mylist [1])                                                                  Pág. 73                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                            EducaTeach - 2025   TIPOS DE LISTAS:                                                                                  EducaTeach - 2025            UNIDIMENSIONAL → un índice          BIDIMENSIONALES → dos índices            LISTAS UNIDIMENSIONALES          Ejemplo #1:          lista1 = [\"Carro\", \"Gato\", \"Tigre\", \"Felino\"]          lista2 = [100, 125, 12.50, 250]           print(str(lista1[0]) + \" Precio: \" + str(lista2[0]))            Ejemplo #2:          //Mostrar la lista de datos verticalmente          lista1 = [\"Carro\", \"Gato\", \"Tigre\", \"Felino\"]          print(lista1[0])          print(lista1[1])          print(lista1[2])          print(lista1[3])           //Resultado:                                                        Pág. 74                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025           OPERACIONES ARITMÉTICAS EN LISTAS             Ejemplo #3:          Sumar posición de datos                       ALMACENAR  ELEMENTOS  DE  UNA  LISTA  A  PARTIR     EducaTeach - 2025   DE LOS DATOS QUE EL USUARIO INGRESE                                                               EducaTeach - 2025               Ejemplo #4:         Almacenar datos en un array, a partir de un usuario.           A=int(input(\"Dame un dato para almacenar en alguna posición del array:\"))          B=int(input(\"Dame un dato para almacenar en alguna posición del array:\"))           almacenado = [A, B]          print(almacenado[0])                                                                        Pág. 75                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025           Ejercicio:          Pedir a un usuario 5 frutas y almacenarlo en un array           Pedir al usuario 5 precios y almacenarlo en otro array           Mostrar verticalmente la fruta y su precio.                       EducaTeach - 2025                                                                                                     EducaTeach - 2025          Resultado:                                                                                        Pág. 76                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             LISTAS BIDIMENSIONALES          Hablemos  de  listas  bidimensionales  en  Python.  Las  listas         bidimensionales tienen muchas aplicaciones en ciencia de         datos y máquina de aprendizaje.          He aquí un ejemplo: en matemáticas, tenemos un concepto         llamado  matriz,  que  es  como  una  matriz  rectangular  de         números. Ejemplo:            Esta es una matriz de 3 por 3 que tiene columnas verticales y filas horizontales. Ahora         podemos modelar esto en python usando una lista bidimensional.          Una lista bidimensional es una lista en la que cada elemento de esa lista es otra lista.         Ejemplo:     EducaTeach - 2025   matrix = [   →                                                                                    EducaTeach - 2025            [1, 2, 3],         [4, 5, 6],        [7, 8, 9]        ]              Esta es una lista bidimensional en la que cada elemento tiene otros tres elementos. Se         dirá que esta lista tiene tres elementos y cada elemento tiene tres elementos. Esto se         llama una lista bidimensional.          Así accederemos a un elemento dentro de una lista bidimensional.         matrix[1][2]         El  primer  corchete  representa  el  elemento  de  la  primera  lista,  es  decir,  [4,  5,  6].  El         segundo representa el índice del elemento dentro de esa lista, es decir, 6. Imprimamos         esto.                                                            Pág. 77                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            ANÁLISIS DE UNA LISTA BIDIMENSIONAL           Este tipo de lista tiene dos índices: vertical y horizontal hablando en sentido abstracto.                                                                                     Filas, índice 2                                                    Columnas, índice 1      EducaTeach - 2025   Si deseamos acceder al dato 5, entonces debemos localizar la posición 1 del primer                EducaTeach - 2025              índice, seguido de la posición 1 del segundo índice. Quedaría así:            matrix[1][1]            Si deseamos acceder al dato 6, entonces debemos localizar la posición 1 del primer           índice, seguido de la posición 2 del segundo índice. Quedaría así:            matrix[1][2]            Si deseamos acceder al dato 3, entonces debemos localizar la posición 0 del primer           índice, seguido de la posición 2 del segundo índice. Quedaría así:            matrix[0][2]                 Ejemplo de una lista de dos dimensiones de 4 x 10. 4 filas y 10 columnas exactas ↓                                                          Pág. 78                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 79                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                          INTRODUCCIÓN AL LENGUAJE DE                                            PROGRAMACIÓN                                                   JAVASCRIPT                      HTML + CSS + JS          EducaTeach - 2025                                                                                                     EducaTeach - 2025                 ¿QUÉ ES HTML?             HTML (HyperText Markup Language) es el lenguaje estándar para crear y estructurar el contenido de              páginas  web.  Utiliza  etiquetas  para  definir  elementos  como  texto,  imágenes,  enlaces,  listas,  tablas,             formularios y más.              Características principales:             Estructura: Organiza el contenido en encabezados, párrafos, secciones, etc.              Etiquetas: Usa etiquetas como <h1>, <p>, <a>, <img> para indicar el propósito de cada elemento.             Multimedia: Permite incrustar imágenes, videos y audio.             Interactividad: Facilita la integración con CSS (diseño) y JavaScript (funcionalidad).             HTML es la base de cualquier página web y funciona junto con CSS y JavaScript para crear experiencias              web completas.               Ejemplo de páginas web básicas. Para estos ejemplos utilizarás el bloc de notas, y lo guardarás             con la extensión (*.html)                                                               Pág. 80                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                <!DOCTYPE html>             <html lang=\"es\">             <head>                 <meta charset=\"UTF-8\">                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">                 <title>Mi Página Web Básica</title>             </head>             <body>                 <header>                     <h1>Bienvenido a Mi Página Web</h1>                 </header>                 <main>                         <p>Esta es una página web básica creada con HTML.</p>                 </main>                 <footer>                     <p>\&copy; 2024 Mi Página Web Básica. Todos los derechos reservados.</p>                 </footer>             </body>             </html>               Uso de colores:     EducaTeach - 2025     <!DOCTYPE html>                                                                                 EducaTeach - 2025                 <html lang=\"es\">             <head>                 <meta charset=\"UTF-8\">                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">                 <title>Párrafo de Colores</title>             </head>             <body>                 <header>                     <h1>Ejemplo de Párrafo con Colores</h1>                 </header>                 <main>                     <p style=\"color: red;\">Este texto es rojo.</p>                     <p style=\"color: blue;\">Este texto es azul.</p>                     <p style=\"color: green;\">Este texto es verde.</p>                     <p style=\"color: orange;\">Este texto es naranja.</p>                     <p style=\"color: purple;\">Este texto es morado.</p>                 </main>                 <footer>                     <p>\&copy; 2024 Ejemplo de HTML Básico. Todos los derechos reservados.</p>                 </footer>             </body>             </html>                                                             Pág. 81                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                ¿QUÉ ES CSS?             CSS (Cascading Style Sheets) es un lenguaje utilizado para definir el estilo y la apariencia de una página              web escrita en HTML. Permite controlar el diseño, los colores, las fuentes, los márgenes, el espaciado y             otros aspectos visuales de los elementos HTML.              Características principales:             Separación de contenido y diseño: HTML se usa para el contenido y CSS para la presentación.              Selección y estilo: Se puede aplicar estilos a elementos específicos mediante selectores.             Responsividad:  Permite  crear  diseños  que  se  adaptan  a  diferentes  dispositivos  (móviles,  tablets,             desktops).             Efectos visuales: Agrega animaciones, transiciones, sombras, gradientes, etc.              CSS mejora la apariencia y la experiencia del usuario sin modificar el contenido de la página.              Ejemplos:              Generar un efecto al pasar el mouse sobre un botón:       EducaTeach - 2025                                                                                                     EducaTeach - 2025                      <!DOCTYPE html>         <html   lang=\"es\">                                                     /* Efecto al pasar el mouse sobre el botón */         <head>                                                                 .boton:hover {                                                                                     background-color: #45a049;             <meta charset=\"UTF-8\">                                                 transform: scale(1.1); /* Aumenta el tamaño */              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">           }              <title>Ejemplo de Hover</title>                                </style>              <style>                                                    </head>                 /* Estilo para el botón */                             <body>                                                                             <h1>Ejemplo de Efecto Hover</h1>                 .boton {                                                   <button class=\"boton\">Pasa el mouse sobre mí</button>                      background-color: #4CAF50;                         </body>                      color: white;                                      </html>                     padding: 15px 32px;                      font-size: 16px;                     border: none;                     border-radius: 5px;                      cursor: pointer;                     transition: background-color 0.3s, transform 0.3s;                 }                                                        Pág. 82                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Algunas de las etiquetas más comunes en HTML:             <html>: Contiene todo el contenido de la página web.              <head>: Contiene metadatos sobre la página (como el título, la codificación de caracteres y los enlaces a             hojas de estilo).             <title>: Define el título que aparece en la pestaña del navegador.             <body>: Contiene el contenido visible de la página.             <header>: Sección de encabezado, generalmente contiene el título y/o el logotipo de la página.              <nav>: Contiene enlaces de navegación.             <main>: Contiene el contenido principal de la página.             <section>: Sección de contenido dentro de la página.             <h1>, <h2>, <h3>, etc.: Títulos y subtítulos. <h1> es el más importante, seguido de <h2>, <h3>, etc.              <p>: Define un párrafo de texto.             <a>: Crea un enlace (con el atributo href para definir la dirección de destino).             <ul>: Lista desordenada (con <li> para los elementos de la lista).             <ol>: Lista ordenada (con <li> para los elementos de la lista).             <img>: Inserta una imagen.              <footer>: Pie de página, generalmente con derechos de autor o información adicional.     EducaTeach - 2025           ¿QUÉ ES JAVASCRIPT?                                                                       EducaTeach - 2025                      Es un lenguaje de programación que se utiliza principalmente para crear páginas web dinámicas.         Una  página  web  dinámica  es  aquella  que  incorpora  efectos  como  texto  que  aparece  y  desaparece,         animaciones, acciones que se activan al pulsar botones y ventanas con mensajes de aviso al usuario.         Técnicamente, JavaScript es un lenguaje de programación interpretado, por lo que no es necesario compilar         los programas para ejecutarlos.         Sintaxis del lenguaje de programación JS en modo consola         JavaScript define dos tipos de comentarios: los de una sola línea y los que ocupan varias líneas.         Ejemplo de comentario de una sola línea:         // a continuación se muestra un mensaje        alert(\"mensaje de prueba\");          Ejemplo de un algoritmo en modo consola:        let numero1 = 5;        let numero2 = 10;        let suma = numero1 + numero2;        console.log(suma); // Imprime: 15                                                      Pág. 83                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Declaración de variables       Se utilizan var, let o const para declarar variables:         var nombre = \"Juan\";  // Variable global (evitar en general)        let edad = 25;        // Variable de alcance local (recomendado)       const PI = 3.14;      // Constante (no puede cambiar su valor)           Tipos de datos        JavaScript soporta varios tipos de datos:         Números: let numero = 42;        Cadenas de texto: let texto = \"Hola\";         Booleanos: let esMayor = true;        Arreglos: let lista = [1, 2, 3];          Objetos:        let persona = {            nombre: \"Maria\",             edad: 30     EducaTeach - 2025     Estructuras de control                                                                          EducaTeach - 2025        };          Condicionales        if (edad > 18) {             console.log(\"Eres mayor de edad\");        } else {            console.log(\"Eres menor de edad\");        }        Switch        let fruta = \"manzana\";         switch (fruta) {            case \"manzana\":                console.log(\"Es una manzana\");                 break;            case \"banana\":                console.log(\"Es una banana\");                 break;            default:                console.log(\"Fruta no identificada\");        }         Bucles        For        for (let i = 0; i < 5; i++) {            console.log(i);  // Imprime números del 0 al 4        }                                                         Pág. 84                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        While        let contador = 0;         while (contador < 3) {            console.log(contador);  // Imprime números del 0 al 2            contador++;         }           For...of (arreglos)        let colores = [\"rojo\", \"verde\", \"azul\"];         for (let color of colores) {            console.log(color);  // Imprime cada color        }          For...in (objetos)         let persona = { nombre: \"Juan\", edad: 25 };        for (let propiedad in persona) {            console.log(propiedad + \": \" + persona[propiedad]);         }     EducaTeach - 2025     Funciones                                                                                       EducaTeach - 2025           Declaración de funciones        function sumar(a, b) {            return a + b;        }         console.log(sumar(2, 3));  // Imprime 5         Funciones flecha (Arrow Functions)         const multiplicar = (a, b) => a * b;        console.log(multiplicar(2, 3));  // Imprime 6         Manejo de eventos         document.getElementById(\"boton\").addEventListener(\"click\", () => {            console.log(\"¡Botón clickeado!\");        });                                                                  Pág. 85                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Manejo de errores        try {            let resultado = 10 / 0;             console.log(resultado); // Puede generar un error         } catch (error) {            console.error(\"Se produjo un error: \", error.message);        } finally {             console.log(\"Esto se ejecuta siempre\");        }          Console (salida en la consola)        Mostrar datos: console.log(\"Hola Mundo\");         Advertencias: console.warn(\"Esto es una advertencia\");        Errores: console.error(\"Esto es un error\");          Uso de clases (Programación orientada a objetos)         class Persona {     EducaTeach - 2025           this.nombre = nombre;                                                                     EducaTeach - 2025            constructor(nombre, edad) {                  this.edad = edad;            }              saludar() {                console.log(`Hola, soy ${this.nombre} y tengo ${this.edad} años`);             }        }         let persona1 = new Persona(\"Carlos\", 40);         persona1.saludar();  // Imprime: Hola, soy Carlos y tengo 40 años          Comentarios         Una sola línea:        // Esto es un comentario de una línea         Múltiples líneas:         /*         Esto es un comentario        de varias líneas         */                                                        Pág. 86                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                               JavaScript puede integrarse perfectamente dentro de un bloque de                                código HTML para agregar interactividad y funcionalidad a tus                                                             páginas web.            Algunos IDEs y editores de texto que puedes usar para programar en JavaScript:        Visual Studio Code (VS Code)         WebStorm         Sublime Text         Atom         Brackets         Notepad++         Eclipse         IntelliJ IDEA        Vim         Emacs            Para  una  mejor  experiencia  del  usuario,  debemos  integrar  3     EducaTeach - 2025   elementos  claves,  que  nos  permitirán  crear  una  página  web                                 EducaTeach - 2025           interactiva y dinámica. Para ello se utilizan JavaScript (JS), CSS y             HTML de la siguiente manera:         1. HTML (como estructura)        HTML es el lenguaje de marcado que define la estructura de la página web. Se encarga de         crear los elementos básicos como encabezados, párrafos, imágenes, botones, enlaces,         etc.             <!DOCTYPE html>             <html lang=\"es\">             <head>                 <meta charset=\"UTF-8\">                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">                 <title>Título de la página</title>             </head>             <body>                 <h1>Hola, Mundo!</h1>                 <p>Bienvenido a mi página web.</p>             </body>             </html>                                                     HTML es como un carro, pero sin estilo o colores                                                            Pág. 87                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        2. CSS (Estilos o estética)        CSS se utiliza para darle estilo a los elementos HTML, como colores, fuentes, márgenes,         espaciado,  etc. Puedes  cambiar  el  diseño  visual  de  la  página sin  modificar  su  estructura         HTML.          Ejemplo:         /* styles.css */        body {             font-family: Arial, sans-serif;             background-color: #f0f0f0;             color: #333;        }           header {             background-color: #4CAF50;            padding: 20px;             color: white;             text-align: center;     EducaTeach - 2025   }                                                                                                 EducaTeach - 2025           button {            background-color: #008CBA;            color: white;             border: none;             padding: 10px 20px;            cursor: pointer;         }           button:hover {            background-color: #005f73;         }                    CSS es como el carrode HTML, pero con colores y estilos                                                               Pág. 88                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        3. JavaScript (Interactividad)        Se utiliza para hacer que la página sea interactiva. Permite responder a eventos del usuario,         como  hacer  clic  en  botones,  enviar  formularios,  modificar  el  contenido  de  la  página         dinámicamente, etc.         Ejemplo:         // script.js        document.getElementById(\"btn\").addEventListener(\"click\", function() {             alert(\"¡Has hecho clic en el botón!\");         });          Resumen:         HTML: Define la estructura de la página (títulos, párrafos, imágenes, enlaces).         CSS: Estiliza la página (colores, fuentes, disposición).        JavaScript: Agrega interactividad (responde a clics, anima elementos, manipula el DOM).           Con estas tres tecnologías, puedes crear una página web completa, desde su estructura         básica hasta la interactividad y el diseño visual.     EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                             JavaScript,  es  como  el  carro  de  HTML,  que  tuvo                                                estilo con CSS para finalmente tener interactividad                                                 con JS                                                                                                    ← EJERCICIOS PRÁCTICOS                                                             Pág. 89                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025       Ejemplo de una página web completa, que solicita dos  datos (números) y realiza las 4       operaciones (suma, resta, multiplicación, división) y el cálculo del promedio al hacer clic        en un botón. La estructura está hecha con HTML, el diseño con CSS, y la interactividad       con JavaScript.        Crearás  3  archivos,  cada  uno  con  el  nombre  y  extensión  indicados.  Todos  estarán        almacenados en la misma carpeta.        Utiliza cualquier editor de la lista mencionada anteriormente.         1. Código HTML (Calculadora.html):         <!DOCTYPE html>        <html lang=\"es\">         <head>            <meta charset=\"UTF-8\">             <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">            <tit  le>Operaciones Aritméticas</title>            <link rel=\"stylesheet\" href=\"styles.css\"> <!-- Vincula el archivo CSS -->         </head>        <body>             <header>                <h1>Operaciones Aritméticas</h1>      EducaTeach - 2025         <main>                                                                                      EducaTeach - 2025            </header>                   <div class=\"form-container\">                    <label for=\"num1\">Número 1:</label>                     <input type=\"number\" id=\"num1\" placeholder=\"Ingrese el primer número\">                    <label for=\"num2\">Número 2:</label>                     <input type=\"number\" id=\"num2\" placeholder=\"Ingrese el segundo número\">                      <button id=\"calculateBtn\">Calcular Operaciones</button>                     <div id=\"result\">                         <p><strong>Suma:</strong> <span id=\"sumResult\"></span></p>                        <p><strong>Resta:</strong> <span id=\"subtractResult\"></span></p>                         <p><strong>Multiplicación:</strong> <span id=\"multiplyResult\"></span></p>                         <p><strong>División:</strong> <span id=\"divideResult\"></span></p>                        <p><strong>Promedio:</strong> <span id=\"averageResult\"></span></p>                     </div>                </div>             </main>             <footer>                 <p>\&copy; 2024 Página Web de Operaciones Aritméticas</p>            </footer>             <script src=\"script.js\"></script> <!-- Vincula el archivo JavaScript -->         </body>        </html>                                                       Pág. 90                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025       2. Código CSS (styles.css):                                 input {       /* styles.css */                                                margin: 10px 0;        body {                                                          padding: 10px;            font-family: Arial, sans-serif;                             width: 100%;           background-color: #f4f4f4;                                  border: 1px solid #ccc;            color: #333;                                                border-radius: 4px;            margin: 0;                                              }           padding: 0;        }                                                           button {                                                                        padding: 10px 20px;        header {                                                        background-color: #008CBA;           background-color: #4CAF50;                                  color: white;            padding: 20px;                                              border: none;            color: white;                                               cursor: pointer;           text-align: center;                                         border-radius: 4px;        }                                                           }          main {                                                      button:hover {      EducaTeach - 2025       padding: 20px;                            background-color: #005f73;                          EducaTeach - 2025             text-align: center;                                                                   }         }                                                                     #result p {       .form-container {                                                                        margin: 10px 0;           margin: 0 auto;                                             font-size: 18px;            width: 300px;                                           }           background-color: white;            padding: 20px;                                          footer {            box-shadow:  0  0  10px  rgba(0,  0,  0,                    text-align: center;       0.1);                                                           padding: 20px;       }                                                               background-color: #333;                                                                        color: white;                                                                    }                                                                    Pág. 91                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          3. Código JavaScript (script.js):         // script.js         document.getElementById(\"calculateBtn\").addEventListener(\"click\", function() {            // Obtener los valores de los inputs             let num1 = parseFloat(document.getElementById(\"num1\").value);            let num2 = parseFloat(document.getElementById(\"num2\").value);               // Validar que ambos números sean ingresados            if (isNaN(num1) || isNaN(num2)) {                 alert(\"Por favor ingresa dos números válidos.\");                return;             }             // Realizar las operaciones             let suma = num1 + num2;            let resta = num1 - num2;             let multiplicacion = num1 * num2;            let division = num2 !== 0 ? num1 / num2 : \"Error: División por cero\";            // Control de división por cero             let promedio = (num1 + num2) / 2;     EducaTeach - 2025       // Mostrar los resultados en la página                                                        EducaTeach - 2025              document.getElementById(\"sumResult\").textContent = suma;             document.getElementById(\"subtractResult\").textContent = resta;            document.getElementById(\"multiplyResult\").textContent = multiplicacion;             document.getElementById(\"divideResult\").textContent = division;             document.getElementById(\"averageResult\").textContent = promedio;        });                      Resultado final aplicando:              Estilo con CSS a la página HTML             la interactividad con JS                                                                  Pág. 92                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Conociendo más a fondo la estructura HTML          Explicación:         El lenguaje HTML funciona por etiquetas: de apertura y de cierre         <!DOCTYPE html>: Define el tipo de documento como HTML5.           <html  lang=\"es\">:  La  etiqueta  raíz  que  contiene  todo  el  contenido  de  la  página,  y        lang  =\"es\" especifica que el contenido está en español.          <head>: Contiene metadatos sobre el documento, como la codificación de caracteres y el         título de la página.         <meta charset=\"UTF-8\">: Define la codificación de caracteres como UTF-8, que es la más         común y soporta muchos caracteres especiales.         <meta  name=\"viewport\"  content=\"width=device-width,  initial-scale=1.0\">:  Asegura  que      EducaTeach - 2025     <title>: Es el título de la página que se muestra en la pestaña del navegador.                  EducaTeach - 2025        la página se vea bien en dispositivos móviles, adaptándose al ancho de la pantalla.                <body>: Contiene todo el contenido visible de la página (texto, imágenes, enlaces, etc.).         <h1>: Un encabezado principal.           <p>: Un párrafo de texto.         Esta es la estructura más básica de una página HTML.                      Las etiquetas de apertura se encierran entre los signos menor y                                                 mayor <body>                 Las etiquetas de cierre, también se encierran entre signos menor y                 mayor, colocando el símbolo de barra diagonal al final </body>                                                               Pág. 93                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Etiquetas HTML comunes:           1. Para la estructura básica de la página:        <htm  l>: Define el inicio de un documento HTML.         <head>: Contiene la información meta (como el título y enlaces a archivos CSS).         <body>: Contiene el contenido visible de la página (como texto, imágenes, etc.).         2. Etiquetas de texto:         <h1> a <h6>: Encabezados de diferentes tamaños.         <p>: Párrafo de texto.        <strong>: Texto en negrita.         <em>: Texto en cursiva.         <span>: Define un contenedor en línea para agrupar elementos.         3. Etiquetas de enlace e imagen:         <a>: Crea un enlace.         <img>: Inserta una imagen.      EducaTeach - 2025   4. Etiquetas de lista:                                                                            EducaTeach - 2025          <ul>: Define una lista sin orden.        <ol>: Define una lista ordenada.         <li>: Define un ítem en una lista.           5. Etiquetas de formularios:        <form>: Crea un formulario.         <input>: Define un campo de entrada en un formulario.         <button>: Crea un botón.         6. Etiqueta de video:         <video src=\"ruta_del_video.mp4\" controls>             Tu navegador no soporta el elemento de video.        </video>           7. Etiqueta de audio:         <audio src=\"ruta_del_audio.mp3\" controls>            Tu navegador no soporta el elemento de audio.         </audio>                                                             Pág. 94                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Conociendo más a fondo la estructura CSS          Explicación:       CSS (Cascading Style Sheets) se utiliza para aplicar estilos a los elementos HTML, como colores, fuentes, márgenes,        espaciado y mucho más.        Propiedades de CSS Comunes Aplicables a un Control HTML:        Propiedades comunes de CSS que puedes aplicar a los controles HTML:         Sintaxis:       selector {            propiedad: valor;       }         1. Propiedades de Estilo para Botones (<button>)       background-color: Establece el color de fondo del botón.        color: Define el color del texto dentro del botón.       paddin  g: Controla el espacio interior del botón (arriba, abajo, izquierda, derecha).       border: Define el borde del botón (puede ser none, un color o un grosor específico).        font-size: Ajusta el tamaño de la fuente dentro del botón.     EducaTeach - 2025   cursor: Cambia el tipo de cursor cuando el mouse pasa sobre el botón (por ejemplo, pointer para una mano).   EducaTeach - 2025       border-radius: Redondea los bordes del botón.        text-align: Alinea el texto dentro del botón.        box-shadow: Agrega una sombra al botón.         2. Propiedades de Estilo para Texto (<p>, <h1>, <span>, etc.)        font-family: Establece la fuente del texto.       font-size: Controla el tamaño del texto.        color: Define el color del texto.       line-height: Ajusta la altura de la línea entre líneas de texto.        text-align: Alinea el texto (por ejemplo, center, left, right).       font-weight: Define el grosor del texto (normal, bold, etc.).        text-transform: Modifica el estilo del texto (uppercase, lowercase, capitalize).         3. Propiedades de Estilo para Contenedores (como <div>, <section>, etc.)        width: Define el ancho del elemento.       height: Establece la altura del elemento.        margin: Controla el espacio fuera del contenedor (márgenes).        padding: Define el espacio interior del contenedor.       border: Agrega un borde al contenedor.        background-color: Cambia el color de fondo del contenedor.       display: Define cómo se debe mostrar el elemento (por ejemplo, block, inline, flex).        position: Controla el posicionamiento del elemento (puede ser absolute, relative, fixed, etc.).         COMPARACIÓN:       En la siguiente página haremos una comparación entre un botón HTML sin       CSS y otro con CSS.                                                      Pág. 95                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025       1. Botón HTML sin CSS:         <!DOCTYPE html>       <html lang=\"es\">       <head>           <meta charset=\"UTF-8\">            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">           <title>Botón Sin CSS</title>       </head>       <body>           <button>Haz clic aquí</button>        </body>       </html>          Resultado →             2. Botón HTML con CSS:         <!DOCTYPE html>        <html lang=\"es\">     EducaTeach - 2025       <meta charset=\"UTF-8\">                                                                        EducaTeach - 2025       <head>            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">            <title>Botón Con CSS</title>           <style>                /* Estilo CSS para el botón */               button {                    background-color: #4CAF50; /* Color de fondo */                   color: white;              /* Color del texto */                    padding: 15px 32px;        /* Espaciado dentro del botón */                   font-size: 16px;           /* Tamaño de la fuente */                   border: none;              /* Sin borde */                    cursor: pointer;          /* Cambiar el cursor al pasar por encima */                   border-radius: 5px;        /* Bordes redondeados */                    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1); /* Sombra sutil */               }                /* Cambia el color de fondo al pasar el ratón sobre el botón */                button:hover {                   background-color: #45a049; /* Color de fondo cuando se pasa el ratón */                }           </style>        </head>       <body>           <button>Haz clic aquí</button>       </body>        </html>          Resultado →                                                          Pág. 96                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         Ejemplo  de  una  página  web  básica  con  HTML, CSS  y JavaScript  que  implementa  una  calculadora  con  las         operaciones básicas (+, -, *, /), un botón para mostrar el resultado (=) y un botón para borrar los datos (C).         Este ejemplo incluye HTML para la estructura, CSS para el diseño visual y JavaScript para la interactividad.            1. Estructura (Calculadora.html):         <!DOCTYPE html>          <html lang=\"en\">          <head>              <meta charset=\"UTF-8\">             <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">              <title>Calculadora Básica</title>              <link rel=\"stylesheet\" href=\"styles.css\">         </head>          <body>              <div class=\"calculator\">                  <input type=\"text\" id=\"display\" readonly>                 <div class=\"buttons\">                      <button onclick=\"appendValue('1')\">1</button>                      <button onclick=\"appendValue('2')\">2</button>     EducaTeach - 2025               <button onclick=\"appendValue('3')\">3</button>                                         EducaTeach - 2025                       <button onclick=\"appendValue('+')\">+</button>                      <button onclick=\"appendValue('4')\">4</button>                      <button onclick=\"appendValue('5')\">5</button>                     <button onclick=\"appendValue('6')\">6</button>                      <button onclick=\"appendValue('-')\">-</button>                      <button onclick=\"appendValue('7')\">7</button>                      <button onclick=\"appendValue('8')\">8</button>                      <button onclick=\"appendValue('9')\">9</button>                      <button onclick=\"appendValue('*')\">*</button>                      <button onclick=\"appendValue('0')\">0</button>                     <button onclick=\"clearDisplay()\">C</button>                      <button onclick=\"calculateResult()\">=</button>                      <button onclick=\"appendValue('/')\">/</button>                  </div>             </div>              <script src=\"script.js\"></script>          </body>         </html>                                                            Pág. 97                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        2. Estilo (styles.css):          body {            font-family: Arial, sans-serif;             display: flex;            justify-content: center;             align-items: center;            height: 100vh;             margin: 0;            background-color: #f4f4f4;         }          .calculator {            width: 300px;             background: #fff;            border-radius: 10px;             box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);            overflow: hidden;        }          #display {            width: 100%;             height: 60px;            font-size: 24px;            text-align: right;             border: none;            padding: 10px;      EducaTeach - 2025   }                                                                                                 EducaTeach - 2025            box-sizing: border-box;            background: #f4f4f4;          .buttons {            display: grid;            grid-template-columns: repeat(4, 1fr);            gap: 5px;             padding: 10px;        }         button {             height: 60px;            font-size: 18px;             border: none;            border-radius: 5px;             background-color: #007bff;            color: white;             cursor: pointer;            transition: background-color 0.3s ease;        }         button:hover {             background-color: #0056b3;        }         button:active {             background-color: #003d80;        }                                                             Pág. 98                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        3. Interacción (script.js):         let display = document.getElementById('display');         // Función para agregar valores al display         function appendValue(value) {             display.value += value;        }          // Función para calcular el resultado         function calculateResult() {            try   {                display.value = eval(display.value);             } catch (e) {                 alert('Expresión inválida');                clearDisplay();             }         }          // Función para limpiar el display      EducaTeach - 2025   function clearDisplay() {                                                                         EducaTeach - 2025               display.value = '';        }                           Resultado:                                                                        Pág. 99                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Página web que muestra una galería de  6 zapatos. Al hacer clic en uno, se muestra el precio del zapato y        aparece un botón llamado \"Comprar\": Este ejemplo incluye HTML para la estructura, CSS para el diseño visual        y JavaScript para la interactividad.          1. Estructura (Carrito.html):       <!DOCTYPE html>        <html lang=\"en\">       <head>           <meta charset=\"UTF-8\">           <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">            <title>Galería de Zapatos</title>           <link rel=\"stylesheet\" href=\"styles.css\">        </head>       <body>            <h1>Galería de Zapatos</h1>           <div class=\"gallery\">                <!-- Cada zapato tiene un contenedor con su imagen y precio -->               <div class=\"shoe\" onclick=\"showDetails(1)\">                    <img src=\"zapatos/A.png?text=Zapato+1\" alt=\"Zapato 1\">                   <p>Zapato 1</p>                </div>               <div class=\"shoe\" onclick=\"showDetails(2)\">                   <  img src=\"zapatos/B.png?text=Zapato+2\" alt=\"Zapato 2\">                   <p>Zapato 2</p>               </div>      EducaTeach - 2025               <img src=\"zapatos/C.png?text=Zapato+3\" alt=\"Zapato 3\">                                EducaTeach - 2025               <!-- Agrega más zapatos -->               <div class=\"shoe\" onclick=\"showDetails(3)\">                    <p>Zapato 3</p>                </div>               <div class=\"shoe\" onclick=\"showDetails(4)\">                    <img src=\"zapatos/D.png?text=Zapato+4\" alt=\"Zapato 4\">                   <p>Zapato 4</p>                </div>               <div class=\"shoe\" onclick=\"showDetails(5)\">                    <img src=\"zapatos/E.png?text=Zapato+5\" alt=\"Zapato 5\">                   <p>Zapato 5</p>                </div>        <div class=\"shoe\" onclick=\"showDetails(5)\">                    <img src=\"zapatos/F.png?text=Zapato+6\" alt=\"Zapato 6\">                   <p>Zapato 6</p>                </div>           </div>            <!-- Detalles del zapato -->           <div i  d=\"details\" class=\"details\">               <h2 id=\"shoeName\">Zapato</h2>               <p id=\"shoePrice\">Precio: $0</p>                <button id=\"buyButton\" onclick=\"buy()\">Comprar</button>           </div>             <script src=\"script.js\"></script>        </body>       </html>                                                             Pág. 100                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                  button {         2. Estilo (styles.css):         body {                                                       padding: 10px 20px;              font-family: Arial, sans-serif;                          font-size: 16px;              margin: 0;                                               border: none;             padding: 0;                                                                      border-radius: 5px;             text-align: center;             background-color: #f9f9f9;                               background-color: #007bff;          }                                                            color: #fff;                                                                      cursor: pointer;         h1 {              margin: 20px 0;                                          transition: background-color 0.3s;             color: #333;                                         }         }                                                                  button:hover {         .gallery {             display: flex;                                           background-color: #0056b3;              flex-wrap: wrap;                                     }              justify-content: center;             gap: 20px;              padding: 20px;         }     EducaTeach - 2025   .shoe {                                                                                           EducaTeach - 2025               width: 150px;              cursor: pointer;             transition: transform 0.3s;          }           .shoe:hover {              transform: scale(1.1);         }          .shoe img {              width: 100%;             border-radius: 10px;              border: 1px solid #ccc;         }           .details {             display: none;              margin-top: 20px;             padding: 20px;              background-color: #fff;              box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);             border-radius: 10px;              max-width: 300px;             margin-left: auto;              margin-right: auto;         }                                                       Pág. 101                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         3. Interactividad (script.js):        // Datos de los zapatos         const zapatos = [             { id: 1, name: \"Zapato 1\", price: 100 },             { id: 2, name: \"Zapato 2\", price: 120 },            { id: 3, name: \"Zapato 3\", price: 90 },             { id: 4, name: \"Zapato 4\", price: 130 },             { id: 5, name: \"Zapato 5\", price: 150 },            { id: 6, name: \"Zapato 6\", price: 80 },           ];         // Mostrar detalles del zapato         function showDetails(id) {             const zapato = zapatos.find(z => z.id === id);            document.getElementById(\"shoeName\").innerText = zapato.name;             document.getElementById(\"shoePrice\").innerText = `Precio: $${zapato.price}`;      EducaTeach - 2025   }                                                                                                 EducaTeach - 2025            document.getElementById(\"details\").style.display = \"block\";           // Comprar (acción para botón \"Comprar\")         function buy() {             alert(\"Gracias por tu compra.\");            document.getElementById(\"details\").style.display = \"none\";         }                   Para todos tus proyectos, crearás siempre tres archivos:               index.html                styles.css                script.js.                                                              Pág. 102                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 Resultado:                            EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                              Pág. 103                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Página web que muestra 6 imágenes relacionadas con herramientas de inteligencia artificial para diseño. Al        hacer clic en una imagen, aparecerá un botón que enlaza a la plataforma correspondiente.         Este ejemplo incluye HTML para la estructura, CSS para el diseño visual y JavaScript para la interactividad.          1. Estructura (index.html):        <!DOCT  YPE html>        <html lang=\"en\">        <head>            <meta charset=\"UTF-8\">            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">             <title>Galería de Plataformas IA</title>            <link rel=\"stylesheet\" href=\"styles.css\">         </head>        <body>            <h1>Plataformas de IA para Diseño</h1>            <div class=\"gallery\">                 <!-- Imagenes de plataformas -->                <div class=\"platform\" onclick=\"showButton('https://www.adobe.com/sensei.html', 'Adobe Sensei')\">                     <img src=\"img/sensei.png?text=Adobe+Sensei\" alt=\"Adobe Sensei\">                    <p>Adobe Sensei</p>                 </div>                <div class=\"platform\" onclick=\"showButton('https://www.canva.com/', 'Canva AI')\">                     <img src=\"img/canva.png?text=Canva+AI\" alt=\"Canva AI\">                    <p>Canva AI</p>                 </div>     EducaTeach - 2025               <img src=\"img/figma.png?text=Figma+AI\" alt=\"Figma AI\">                                EducaTeach - 2025                <div class=\"platform\" onclick=\"showButton('https://www.figma.com/', 'Figma AI')\">                     <p>Figma AI</p>                 </div>                <div class=\"platform\" onclick=\"showButton('https://runwayml.com/', 'RunwayML')\">                     <img src=\"img/runway.png?text=RunwayML\" alt=\"RunwayML\">                    <p>RunwayML</p>                </div>                 <div class=\"platform\" onclick=\"showButton('https://designify.com/', 'Designify')\">                    <img src=\"img/designify.png?text=Designify\" alt=\"Designify\">                     <p>Designify</p>                </div>                 <div class=\"platform\" onclick=\"showButton('https://www.deepart.io/', 'DeepArt')\">                    <img src=\"img/deepart.png?text=DeepArt\" alt=\"DeepArt\">                     <p>DeepArt</p>                </div>             </div>             <!-- Botón para redirigir -->            <div id=\"buttonContainer\" class=\"hidden\">                 <h2 id=\"platformName\">Plataforma</h2>                <a id=\"platformLink\" href=\"#\" target=\"_blank\">                     <button>Ir a la plataforma</button>                </a>             </div>              <script src=\"script.js\"></script>        </body>         </html>                                                           Pág. 104                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         2. Estilo (styles.css):                              #buttonContainer {        body {                                                   margin-top: 20px;             font-family: Arial, sans-serif;                                                                 padding: 20px;            margin: 0;                                           background-color: #fff;             padding: 0;                                                                 box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);            text-align: center;                                  border-radius: 10px;             background-color: #f9f9f9;                           max-width: 300px;        }                                                        margin-left: auto;                                                                   margin-right: auto;        h1 {                                                     display: none; /* Oculto inicialmente */            margin: 20px 0;                                  }             color: #333;         }                                                    button {                                                                 padding: 10px 20px;        .gallery {                                               font-size: 16px;             display: flex;                                                                 border: none;            flex-wrap: wrap;                                     border-radius: 5px;            justify-content: center;                             background-color: #007bff;      EducaTeach - 2025       padding: 20px;                      color: #fff;                                              EducaTeach - 2025            gap: 20px;                                                                  cursor: pointer;         }                                                                 transition: background-color 0.3s;          .platform {              width: 150px;                                    }                                                             button:hover {            cursor: pointer;                                                                  background-color: #0056b3;            transition: transform 0.3s;                      }         }                                                              .hidden {        .platf  orm:hover {                                                                 display: none;            transform: scale(1.1);                                                             }        }          .platform img {             width: 100%;             border-radius: 10px;             border: 1px solid #ccc;         }                                                             Pág. 105                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         3. Interactividad (script.js):        // Mostrar el botón y enlace correspondiente         function showButton(link, platformName) {             const buttonContainer = document.getElementById(\"buttonContainer\");             const platformLink = document.getElementById(\"platformLink\");            const platformNameElement = document.getElementById(\"platformName\");               platformNameElement.innerText = platformName; // Cambia el nombre de la plataforma            platformLink.href = link; // Establece el enlace             buttonContainer.style.display = \"block\"; // Muestra el contenedor        }                 Resultado:           EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                              Pág. 106                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                                                          ALGORITMOS CÍCLICOS                                                  Presaberes                            CICLO MIENTRAS (WHILE)                                                                                        CICLO PARA (FOR)                                                                                        EXCEPCIONES                                                                                        TUPLAS                                                                                        DICCIONARIOS                                                                                           LISTAS     EducaTeach - 2025                                                                                                     EducaTeach - 2025                              Unidad 3                                                          Crear                            CICLO FOR (PARA)                                                                                        INTRODUCCIÓN A VISUAL STUDIO                                                                                        VISUAL C#                                                                                        EJEMPLOS Y EJERCICIOS                                                                          Pág. 107                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                             INTRODUCCIÓN AL LENGUAJE DE PROGRAMACIÓN Visual C#            ¿Qué es C #?          C # se pronuncia \"C-Sharp\".            Es un lenguaje de programación orientado a objetos creado por Microsoft que se ejecuta          en .NET Framework.            C # tiene raíces de la familia C y el lenguaje está cerca de otros lenguajes populares como          C ++ y Java.           La primera versión se lanzó en el año 2002. La última versión, C # 8, se lanzó en 2024.            C # se usa para:             Aplicaciones móviles      EducaTeach - 2025   Aplicaciones de escritorio                                                                        EducaTeach - 2025            aplicaciones web           servicios web           Sitios web           Juegos           VR          Aplicaciones de base de datos           ¡Y mucho, mucho más!            ¿Por qué usar C #?         Es uno de los lenguajes de programación más populares del mundo.         Es fácil de aprender y fácil de usar.         Tiene un gran apoyo de la comunidad.         C # es un lenguaje orientado a objetos que brinda una estructura clara a los programas y         permite que el código se reutilice, lo que reduce los costos de desarrollo.          Como  C  #  está  cerca  de  C,  C  ++  y  Java,  facilita  a  los  programadores  cambiar  a  C  #  o         viceversa.                                                          Pág. 108                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          C # IDE         La forma más sencilla de comenzar con C # es usar un IDE.          En el bimestre anterior hablamos del tema IDE:        Un  entorno  de  desarrollo  integrado  (IDE)  es  un  sistema  de  software  para  el  diseño  de  aplicaciones  que         combina herramientas del desarrollador comunes en una sola interfaz gráfica de usuario (GUI).          Se utiliza un IDE (entorno de desarrollo integrado) para editar y compilar código.         En  nuestros  ejercicios,  usaremos  Visual  Studio  Community,  que  se  puede  descargar  gratis  desde        https://visualstudio.microsoft.com/vs/community/.         Las aplicaciones escritas en C # usan .NET Framework, por lo que tiene sentido usar Visual Studio, ya que el         programa, el marco y el lenguaje son todos creados por Microsoft.          Instalación de C #        Una vez que el instalador de Visual Studio está descargado, se procede a su instalación, que dependerá del         hardware de su equipo.         Luego de su instalación, aparecerá una ventana similar a esta:             PRESABERES…     EducaTeach - 2025   En programación un tipo de dato es la forma de representación del dato e indica la clase de dato que se va a   EducaTeach - 2025          ¿Qué es un tipo de dato?          manejar. Esto incluye imponer restricciones en los datos, como qué valores pueden tomar y qué operaciones se          pueden realizar.                Numéricos: Los datos de tipo número pueden ser enteros, flotantes.         Booleanos: Los tipos de datos booleanos se utilizan para representar verdadero y falso, mediante las palabras          reservadas True o False respectivamente. Este tipo de datos es muy importante en para el control de flujo de          un programa como veremos en las siguientes lecciones.           Cadenas: Aunque las cadenas no son usualmente importantes para análisis numérico, sí lo son para mostrar         resultados  por  la  terminal  o  shell.  Una  cadena  debe  delimitarse  con  comillas  simples  o  dobles  y  admite          caracteres de escape.            Listas: Una lista es una colección de objetos: números enteros, flotantes, complejos, cadenas, etc. Una lista se          delimita  utilizando  []  y  sus  elementos  han  de  separarse  con  comas.  Es  posible  acceder  a  sus  elementos         indicando el índice del elemento deseado.           Tuplas:  En  muchos  sentidos  una  tupla  es  como  una  lista,  contienen  una  colección  de  objetos  de          distinto tipo. Es decir, son lista de elementos de diferente tipo de dato.           Diccionario: Un diccionario se compone de dos partes: una llave (palabra) y un valor (definición). Las         llaves siempre deben ser un tipo de dato primitivo. La llave y el valor se separan con: y sus elementos          con comas.                                                           Pág. 109                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Variables de C #         Las variables son contenedores para almacenar valores de datos.          En C #, existen diferentes tipos de variables (definidas con diferentes palabras clave), por         ejemplo:           int - almacena enteros (números enteros), sin decimales, como 123 o -123         double - almacena números de punto flotante, con decimales, como 19,99 o -19,99         char- almacena caracteres individuales, como 'a' o 'B'. Los valores de caracteres están         rodeados por comillas simples         string- almacena texto, como \"Hola mundo\". Los valores de cadena están rodeados por         comillas dobles         bool - almacena valores con dos estados: verdadero o falso             OTROS EJEMPLOS DE TIPOS DE DATOS EN VISUAL C#          int myNum = 5;               // Integer (whole number)     EducaTeach - 2025   char myLetter = 'D';         // Character                                                         EducaTeach - 2025         double myDoubleNum = 5.99D;  // Floating point number           bool myBool = true;          // Boolean          string myText = \"Hello\";     // String            ¿Qué es una variable?        Se  define  como  variable  al  espacio  reservado  de  la  memoria  que  almacena  un  dato,  que  como  su         propio nombre indica, puede cambiar de valor en tiempo de ejecución. En Python tenemos tipos de         datos simples (números enteros, de coma flotante) cadenas de texto, y valores booleanos.         Ejemplo:         Int x         float dato          ¿Qué ES UNA CONSTANTE?        Es un dato que no cambia durante la ejecución de un programa.         Ejemplo:         Int a = 25         Pi = 3.1416                                 Operadores aritméticos →                                                              Pág. 110                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                  Operadores lógicos             Los operadores lógicos son utilizados en la mayoría de             las  ocasiones  en  las  estructuras  condicionales.  A              modo de ejemplo, podemos abrir el IDLE de Python y             escribir directamente en la consola diferentes tipos de             operaciones  lógicas. Observa  que  los  resultados  que              devuelven  las  operaciones  lógicas  son  de  tipo             booleano, es decir, verdadero (True) o falso (False).                                                                PROGRAMACION GUI Y CLI      EducaTeach - 2025                                                                                                     EducaTeach - 2025                   GUI          La  Interfaz  gráfica  de  usuario  o GUI  (Graphic  User  Interface)  es  el  entorno visual  de          imágenes y objetos mediante el cual una máquina y un usuario interactúan. A mediados          de los setentas las GUI comenzaron a sustituir a las interfaces de línea de comando          (CLI),  y  esto  permitió  que  la  interacción  con  las  computadoras  fuera  más  sencilla  e          intuitiva.           Para ejemplificar de un modo más simple, veamos la diferencia entre una Interfaz de          línea de comando y una Interfaz gráfica de usuario:           CLI Windows                                                                 Pág. 111                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025               GUI            ¿Para qué sirven las Interfaces gráficas de usuario?         Su función principal es simplificar la comunicación entre una máquina o un sistema operativo y un usuario.          Antes de que se desarrollaran y popularizaron las GUI, solo las personas con conocimientos profundos de        informática  podían  usar  un  computador,  pero  las  interfaces  gráficas  sustituyeron  la  complejidad  de  los         comandos por acciones predeterminadas simbolizadas por elementos visuales muy sencillos de comprender.            VENTAJAS GUI:        Ventanas         – Permiten desplegar información de manera simultánea.         • Iconos         – Representan diferentes tipos de información.         • Menús     EducaTeach - 2025   • Apuntador                                                                                       EducaTeach - 2025        – Ayuda a seleccionar comandos.          – Permite seleccionar un menú o indicar elementos de interés.         • Gráficos        – Muestran al usuario la información de manera atractiva.           INTERFAZ CLI         La interfaz de línea de comando (CLI) es una interfaz de texto, a la que se accede mediante comandos en         prompts, en lugar de usar el mouse a través de la interfaz gráfica del usuario (GUI).         A diferencia de la GUI de un sistema operativo, una línea de comando usa solo el teclado para navegar y         realizar acciones a través del código, por lo que no usa un mouse.          La CLI también se denomina símbolo del sistema operacional Windows, o terminal/pantalla de comando en         macOS. La mayoría de los sistemas operacionales de consumo están diseñados para proteger al usuario de        los pros y los contras de la CLI.           Entre sus ventajas, CLI se destaca por su potencia, velocidad y capacidad para realizar una amplia gama de         tareas  con  una  sola  instrucción  de  línea  de  comando.  No  importa  qué  tipo  de  desarrollo,  codificación,         programación o tarea de TI realice, es importante comprenderlo.         ¿Qué es CLI?         En la década de 1960, CLI se utilizó ampliamente. En ese momento, las personas solo tenían un teclado como         dispositivo de entrada, la pantalla de la computadora solo mostraba información de texto.         Los  sistemas  operativos,  como  MS-DOS,  usaban  la  CLI  como  interfaz  de  usuario  estándar.  Básicamente,  los         usuarios tenían que ingresar un comando en la CLI para realizar las tareas, ya que esta era la única forma de        comunicarse con la computadora.                                                       Pág. 112                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         TIPOS DE PROGRAMACION EN VISUAL C#         MODO CONSOLA (CLI):         Es  tipo  de  programación  se  parece  mucho  al  método  CLI.  Funciona  por  líneas  de         comandos, y comúnmente no tiene un entorno gráfico, y no es posible utilizar el mouse.         Ejemplo:                     EducaTeach - 2025   MODO GRÁFICO WINDOWS FORMS                                                                        EducaTeach - 2025            Es tipo de programación es el más usual, pues tiene un entorno gráfico, en modo GUI, que        es más accesible para el usuario final. En esta ocasión si es posible utilizar el mouse, pues        ya cuenta con un entorno gráfico, con el uso de controles y botones de función.        Ejemplo:                                                                           Pág. 113                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Elabora  un  cuestionario  con  un  mínimo  de  5  preguntas  con  los  temas  descritos          ante  riormenteducaTeach - 2025   _____________________________________________________________________________________________     EducaTeach - 2025                5. ________________________________________________________            _____________________________________________________________________________________________                 NOTA:         Los  dos  tipos  de  programación  son  eficientes.  Resuelven  los  mismos  problemas         matemáticos, y presentan los mismos resultados.          Como programadores sabemos que se trata diseñar el software adecuado para que sea         fácil de utilizar por el usuario final.                                                                Pág. 114                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                              ¡PRACTIQUEMOS CON Visual C#!            Sintaxis de C #:         Visual C#, utiliza el siguiente parámetro de código:         using System;         namespace HelloWorld        {          class Program          {            static void Main(string[] args)             {               Console.WriteLine(\"Hello World!\");            }  }}           Declaración (creación) de variables          Para crear una variable, debe especificar el tipo y asignarle un valor:         Sintaxis     EducaTeach - 2025   Donde   tipo es un tipo de C # (como int o string) y variableName es el nombre de la variable (como x o nombre).    EducaTeach - 2025          type variableName = value;           El signo igual se utiliza para asignar valores a la variable.          Para crear una variable que debería almacenar texto, observe el siguiente ejemplo:         Cree una variable llamada nombre de tipo string y asígnele el valor \" John \":          string name = \"John\";          Console.WriteLine(name);          Para crear una variable que debería almacenar un número, observe el siguiente ejemplo:         Cree u  na variable llamada myNum of type int y asígnele el valor 15:         int myNum = 15;          Console.WriteLine(myNum);          También puede declarar una variable sin asignar el valor y asignar el valor más tarde:          int myNum;          myNum = 15;         Console.WriteLine(myNum);           Tenga   en cuenta que si asigna un nuevo valor a una variable existente, sobrescribirá el valor anterior:         Ejemplo          Cambie el valor de myNuma 20:          int myNum = 15;         myNum = 20; // myNum is now 20          Console.WriteLine(myNum);          Constantes          Sin  embargo, puede agregar const  si no desea  que otros  (o  usted  mismo)  sobrescriban  los  valores  existentes  (esto  declarará  la          variable como \"constante\", lo que significa inmutable y de solo lectura):         Ejemplo          const int myNum = 15;         myNum = 20;                                                        Pág. 115                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         La  palabra  const  es  útil  cuando  desea  que una  variable  almacene  siempre  el  mismo        valor, para que otros (o usted mismo) no estropeen su código.          Un ejemplo que a menudo se denomina constante es PI (3,14159 ...).           Nota:  no  puede  declarar  una  variable  constante  sin  asignar  el  valor.  Si  lo  hace,  se        producirá un error: un campo constante requiere que se proporcione un valor.         ________________________________________        Otros tipos         Una demostración de cómo declarar variables de otros tipos:        Ejemplo         int myNum = 5;         double myDoubleNum = 5.99D;        char myLetter = 'D';         bool myBool = true;        string myText = \"Hello\";           Variables de visualización     EducaTeach - 2025   El WriteLine()método se usa a menudo para mostrar valores de variables en la ventana              EducaTeach - 2025           de la consola.             Para combinar texto y una variable, use el carácter +:         Ejemplo         string name = \"John\";        Console.WriteLine(\"Hello \" + name);         También puede usar el carácter +  para agregar una variable a otra variable:         Ejemplo         string firstName = \"John \";        string lastName = \"Doe\";         string fullName = firstName + lastName;        Console.WriteLine(fullName);             Para valores numéricos, el carácter +, ya que funciona como un operador matemático        (observe que aquí usamos int variables (enteras)):                                                          Pág. 116                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejemplo          int x = 5;         int y = 6;          Console.WriteLine(x + y); // Print the value of x + y         En el ejemplo anterior, puede esperar:          •      x almacena el valor 5         •      y almacena el valor 6          •      Luego usamos el WriteLine()método para mostrar el valor de x + y, que es 11          ________________________________________         Declarar muchas variables          Para declarar más de una variable del mismo tipo, use una lista separada por comas:          Ejemplo         int x = 5, y = 6, z = 50;          Console.WriteLine(x + y + z);           Entradas y salidas de usuario de C #            MODO CONSOLA     EducaTeach - 2025   Console.WriteLine()                                                                               EducaTeach - 2025            Se utiliza para generar y mostrar (imprimir) valores. No permite escribir, solo presentar.          Ejemplo:          Console.WriteLine(\"Bienvenidos-as\");          Console.WriteLine(\"MENU PRINCIPAL\");          Para mostrar el resultado de una variable u operación simplemente agregamos un signo          + seguido de la variable. Ejemplo:                 Console.WriteLine(\"Username is: \" + userName);             Console.ReadLine()           Se utiliza para obtener la entrada del usuario. Permite escribir.           En  el  siguiente  ejemplo,  el  usuario  puede  ingresar  su  nombre  de          usuario, que se almacena en la variable userName. Luego imprimimos el          valor de userName:                                                               Pág. 117                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejemplo         // Type your username and press enter          Console.WriteLine(\"Enter username:\");           // Create a string variable and get user input from the keyboard and store it in the          variable          string userName = Console.ReadLine();            // Print the value of the variable (userName), which will display the input value          Console.WriteLine(\"Username is: \" + userName);            EJERCICIOS EN MODO CONSOLA:          PASOS:         Estos  pasos  serán  para  todos  los  códigos  de  ejemplo,  por  ello  es  muy  importante          seguir detalladamente las instrucciones.           PASO 1:      EducaTeach - 2025                                                                                                     EducaTeach - 2025                        ABRE VISUAL STUDIO                       DESDE EL MENÚ                                INICIO:            PASO 2:          CREAR UN NUEVO PROYECTO DE CONSOLA:                                          1                                          2                                                                 Pág. 118                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                    Visual Studio asignará una carpeta especial, donde se creará tu proyecto, no                                                     debes cambiarlo.                                          3                                                                 5                                      4                                                  6     EducaTeach - 2025                                                                                7                    EducaTeach - 2025                                                                      RESULTADO:                                                                           Pág. 119                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         INGRESO DE CÓDIGO:         Es  muy  importante  saber  y  conocer  el  área  especial  de  la  codificación  de  nuestro         programa, en Visual Studio, debemos respetar el espacio asignado para evitar errores de         sintaxis y de compilación.                                                                                               Aquí deberás                                                                                escribir tu código.        EducaTeach - 2025                                                                                                     EducaTeach - 2025                 EJEMPLO:                          COMPILACIÓN Y EJECUCIÓN         Visual C#, evaluará la lógica del algoritmo o bloque de código, luego procederá a crear el         ejecutable. Estos pasos son para modo Consola y Windows Forms                                                          Pág. 120                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                         1                                                                                                2                                                      RESULTADO:     EducaTeach - 2025                            3                                                                        EducaTeach - 2025                EJERCICIOS:         Se  presentan  varios  programas  en  modo  consola,  para  cada  algoritmo  deberás  crear  un  nuevo  proyecto,  y  seguir  los  pasos          anteriores.             1.  Suma de dos números enteros - C#          using System;         using System.Collections.Generic;          using System.Linq;          using System.Text;          namespace Ejemplo1         {              class suma             {                  static void Main(string[] args)                 {                     int numero1, numero2, resultado;                      Console.WriteLine(\"Ingrese un número Entero: \");                      numero1 = int.Parse(Console.ReadLine());                     Console.WriteLine(\"Ingrese un número Entero: \");                      numero2 = int.Parse(Console.ReadLine());                     resultado = numero1 + numero2;                      Console.WriteLine(\"El resultado es: \" + resultado);                      Console.ReadLine();                 }             }}                                                        Pág. 121                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            2.  CALCULO DE SUELDO - C#          using System;          class Program {                static void Main() {                       float sueldoTotal,porc;                      int horasTrabajadas;                      const float SUELDO = 7000f; //sueldo por hora                        Console.Write(\"Horas trabajadas: \");                      horasTrabajadas = int.Parse(Console.ReadLine());                         sueldoTotal = horasTrabajadas * SUELDO;                      porc = sueldoTotal * 0.10f; //calcula el 10%                          Console.WriteLine(\"Horas trabajadas: {0}\",horasTrabajadas);                      Console.WriteLine(\"Total sin aumento: {0}\",sueldoTotal);     EducaTeach - 2025       }            }   Console.WriteLine(\"Total con aumento: {0}\",sueldoTotal + porc);              EducaTeach - 2025                       3. Obtener el área y perímetro de un cuadrado.          using System;         namespace CSharp_008 {             class Program {                 static void Main(string[] args) {                     double lado, area, perim;                     area = perim = 0.0;                     Console.Write(\"Introduce medida del lado: \");                     lado = double.Parse(Console.ReadLine());                     area = lado * lado;                     perim = lado * 4;                     Console.WriteLine(\"Perimetro: \" + perim);                     Console.WriteLine(\"Area: \" + area);                     Console.ReadLine();                 }}}                                                          Pág. 122                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        FUNCIONES MATEMÁTICAS:        En visual C#, podemos llamar funciones predeterminadas para generar resultados rápidos sin crear código lógico.        Para hacer esto en C# o C Sharp no necesitamos librerías adicionales, simplemente llamamos al método estático Pow de la clase Math         y le pasamos dos argumentos:         El número que queremos elevar         El exponente al que lo vamos a elevar         Elevar al cuadrado         Veamos cómo elevar un número al cuadrado en C#. Aquí el código:         using System;        class Potencias{             public static void Main(){                 int numero = 10;                double elevadoAlCuadrado = Math.Pow(numero, 2); // Elevar a potencia 2                 Console.WriteLine(string.Format(\"{0} elevado al cuadrado es {1}\", numero, elevadoAlCuadrado));                     Console.ReadLine();            }}              Elevar   un número al cubo         Es casi lo mismo que arriba, sólo que ahora la potencia sería la 3. Probemos elevando el número 5 al cubo, lo mismo que es elevar un          número a la potencia 3:     EducaTeach - 2025   using System;                                                                                     EducaTeach - 2025            class Potencias{              public static void Main(){                 int numero = 5;                  double elevadoAlCubo = Math.Pow(numero, 3); // Elevarlo a la potencia 3                 Console.WriteLine(string.Format(\"{0} elevado al cubo es {1}\", numero, elevadoAlCubo));                     Console.ReadLine();             }         }          Elevar un número a cualquier potencia          Ya  vimos  cómo  elevar  un  número  al  cuadrado  y  al  cubo.  Lo  que  hicimos  fue  llamar  a  Math.Pow  con  el  segundo  argumento         representando al número que vamos a elevar.            Entonces para elevar un número en C#, por ejemplo, elevar el 2 a la potencia 32 hacemos esto:          using System;         class P  otencias{             public static void Main(){                  int numero = 2, potencia = 32;                  double elevado = Math.Pow(numero, potencia); // Elevarlo a la potencia 32                 Console.WriteLine(string.Format(\"{0} elevado a la potencia {1} es {2}\", numero, potencia, elevado));              }         }               Encontrar el área del círculo, pero primero sabiendo la fórmula para poder encontrar el área.                                                         Pág. 123                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025       CALCULAR ÁREA DE UN TRIÁNGULO       using System;        using System.Collections.Generic;        using System.Linq;        using System.Text;       namespace EJE_1._4_PIENSE_EN_C        {           class Program            {                static void Main(string[] args)                {                 double bas, alt;                 double sup;                 Console.WriteLine(\"Ingresa la Base del Triangulo: \");                 bas = double.Parse(Console.ReadLine());                Console.WriteLine(\"Ingresa la Altura del Triangulo: \");                 alt = double.Parse(Console.ReadLine());                 sup = Math.Round((bas * alt /2), 2);                 Console.WriteLine(\"El Área del Triangulo es: \" + sup);                 Console.ReadKey();     EducaTeach - 2025           }                                                                                         EducaTeach - 2025             }        }             Condicionales de C # y declaraciones If        C # admite las condiciones lógicas habituales de las matemáticas:         Menor que: a <b        Menor o igual a: a <= b        Mayor que: a> b        Mayor o igual a: a> = b        Igual a a == b        No es igual a: a! = B            Puede  utilizar  estas  condiciones  para  realizar  diferentes  acciones  para  decisiones        diferentes.                                                           Pág. 124                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        C # tiene las siguientes declaraciones condicionales:        Simple: úselo if para especificar un bloque de código que se ejecutará, si una condición         especificada es verdadera         Doble:  úselo  else  para  especificar  un  bloque  de  código  que  se  ejecutará,  si  la  misma         condición es falsa         Anidada: úselo else if para especificar una nueva condición para probar, si la primera         condición es falsa         Úselo switch para especificar muchos bloques alternativos de código que se ejecutarán          La declaración if (condicional simple)         Utilice la declaración if para especificar un bloque de código C # que se ejecutará si una         condición es True.         Sintaxis         if (condition)        {           // block of code to be executed if the condition is True         }      EducaTeach - 2025   Tenga en cuenta que if está en minúsculas. Las letras mayúsculas (If o IF) generarán un           EducaTeach - 2025         error.           En el siguiente ejemplo, probamos dos valores para averiguar si 20 es mayor que 18. Si la        condición es True, imprima algo de texto:         Ejemplo         if (20 > 18)         {           Console.WriteLine(\"20 is greater than 18\");         }           También podemos probar variables:         Ejemplo         int x = 20;         int y = 18;         if (x > y)         {           Console.WriteLine(\"x is greater than y\");        }                                                            Pág. 125                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Ejemplo explicado         En el ejemplo anterior se utilizan dos variables, x y y, para probar si x es mayor que y         (utilizando el >operador). Como x es 20 y y es 18, y sabemos que 20 es mayor que 18,         imprimimos en la pantalla que \"x es mayor que y\".          La declaración else (condicional doble)         Utilice  la  declaración  else  para  especificar  un  bloque  de  código  que  se  ejecutará  si  la         condición es False.          Sintaxis         if (condition)        {           // block of code to be executed if the condition is True        }         else        {           // block of code to be executed if the condition is False     EducaTeach - 2025     Ejemplo                                                                                         EducaTeach - 2025         }           int time = 20;        if (time < 18)        {           Console.WriteLine(\"Good day.\");        }         else        {           Console.WriteLine(\"Good evening.\");        }         // Outputs \"Good evening.\"             Ejemplo explicado         En el ejemplo anterior, el tiempo (20) es mayor que 18, por lo que la condición es False.         Por ello, pasamos a la else condición e imprimimos en la pantalla \"Buenas noches\". Si el         tiempo es menor a 18, el programa imprimirá \"Buen día\".                                                           Pág. 126                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         La declaración else if (condicional anidada)         Utilizar la else ifdeclaración para especificar una nueva condición si la primera condición        es False.          Sintaxis         if (condition1)         {           // block of code to be executed if condition1 is True        }        else if (condition2)         {          // block of code to be executed if the condition1 is false and condition2 is True         }         else        {            // block of code to be executed if the condition1 is false and condition2 is False     EducaTeach - 2025       //Ejemplo:                                                                                    EducaTeach - 2025        }            int time = 22;         if (time < 10)         {          Console.WriteLine(\"Good morning.\");         }         else if (time < 20)         {          Console.WriteLine(\"Good day.\");         }        else        {           Console.WriteLine(\"Good evening.\");        }         // Outputs \"Good evening.\"                                                              Pág. 127                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            Elabora  un  cuestionario  con  un  mínimo  de  5  preguntas  con  los  temas  descritos          anteriormenteducaTeach - 2025     3. ________________________________________________________                                     EducaTeachág. 128                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 CICLOS EN VISUAL C#            DEFINICIÓN:          Es  una  secuencia  de  instrucciones  de  código  que  se  ejecuta  repetidas  veces,  hasta  que  la          condición asignada a dicho bucle deja de cumplirse.           Hay tres bucles más utilizados en programación, estos son:          1. El bucle while          2. El bucle for          3. El bucle do-while.               ciclo  tiene  sus  propias  reglas,  pero  al  final  comparten  similitudes  en  ejecución  y         Cada         resu  ltados.          1. CICLO WHILE          El propósito de este ciclo, es repetir un bloque de código mientras una condición se mantenga          verdadera. La evaluación inicia desde el principio.      EducaTeach - 2025               x = 1;                                                                                EducaTeach - 2025                 int x;                       while (x <= 100) {                          Console.Write(x);                          Console.Write(\" - \");                          x = x + 1; }                      Console.ReadKey();           2. CICLO DO WHILE         El     ciclo  do-while  (Instrucción  hacer  –  repetir  mientras)  es  un  tipo  de  estructura  repetitiva         eficiente. Lo que lo diferencia con el while es que en la estructura do-while la condición se          evalúa al finalizar el ciclo, esto hace que las instrucciones se ejecuten cuando menos una vez.           El ciclo do while detiene  la ejecución solo cuando una condición booleana se evalúa como          falsa. Debido a que el while (condición) especificado al final del bloque, ciertamente ejecuta el          bloque de código al menos una vez.          Este ciclo evalúa la condición al final.                 int i = 1, n = 5, producto;                 do {                 producto = n * i;                Console.WriteLine(\"{0} * {1} = {2}\", n, i, producto);                i++;                } while (i <= 10);                                                          Pág. 129                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         3. CICLO FOR:        En general, la estructura for se usa en aquellas situaciones en las cuales CONOCEMOS la         cantidad de veces que queremos que se ejecute el bloque de instrucciones.          Conocemos de antemano la cantidad de veces que queremos que el bloque se repita.            int f;                     for(f=1;f<=100;f++)                     {                         Console.Write(f);                         Console.Write(\"-\");                     }                     Console.ReadKey();          OTRO EJEMPLO:         for (int i = 1; i <= 10; i++)      EducaTeach - 2025                        Console.WriteLine(\"\\nTabla de multiplicar del {0}\", i);                      EducaTeach - 2025                      {                         Console.WriteLine(\"------------------------------\");                      for (int j = 1; j <= 10; j++)                          {                      Console.WriteLine(\"{0} * {1} = {2}\", i, j, (i * j));                      }            EJERCICIOS:         Escribe estos ejercicios en Visual Studio, recuerda, cada ejercicio debe ir en un nuevo         proyecto de consola.            Mostrar un mensaje e ir contando las veces que se repite:         int counter = 0;         while (counter < 10)         {            Console.WriteLine($\"Hello World! The counter is {counter}\");             counter++;         }                                                        Pág. 130                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025           Mostrar tabla de multiplicar con dos ciclos diferentes:         using System;         using System.Collections.Generic;         using System.Linq;         using System.Text;         using System.Threading.Tasks;         namespace Clase1_Ciclos         {            class Program             {                 static void Main(string[] args)                 {                     int tabla=0;                     int i = 1;                     int resultado = 0;                     do      EducaTeach - 2025               {                                                                                     EducaTeach - 2025                           Console.WriteLine(\"Ingrese la tabla de multiplicar que desea o 0 para salir\");                         tabla = int.Parse(Console.ReadLine());                         Console.WriteLine(\"******************Ciclo con While***************\");                         while (i <= 10)                         {                             resultado = i * tabla;                             Console.WriteLine(\"La multiplicacion de {0} por {1} es {2}\", tabla, i,         resultado);                             i++;                         };                         Console.WriteLine(\"******************Ciclo con For***************\");                         for (int j = 0; j <= 10; j++)                         {                             resultado = j * tabla;                             Console.WriteLine(\"La multiplicacion de {0} por {1} es {2}\", tabla, j,         resultado);                         }                     } while (tabla != 0);                     Console.ReadKey();                 }}}                                                        Pág. 131                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          INGRESAR 10 VALORES Y CALCULAR SU PROMEDIO:          using System;         using System.Collections.Generic;         using System.Linq;         using System.Text;         using System.Threading.Tasks;          namespace EstructuraRepetitivaWhile3        {             class Program             {                 static void Main(string[] args)                 {                     int x,suma,valor,promedio;                     string linea;                     x=1;     EducaTeach - 2025               suma=0;                                                                               EducaTeach - 2025                      while (x<=10)                     {                         Console.Write(\"Ingrese un valor:\");                        linea = Console.ReadLine();                         valor=int.Parse(linea);                         suma=suma+valor;                         x=x+1;                     }                     promedio=suma/10;                     Console.Write(\"La suma de los 10 valores es:\");                     Console.WriteLine(suma);                     Console.Write(\"El promedio es:\");                     Console.Write(promedio);                     Console.ReadKey();                 }             }         }                                                             Pág. 132                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          IMPRIMIR NÚMEROS DEL 1 AL 500 CON CICLO FOR         using System;         using System.Collections.Generic;        using System.Linq;         using System.Text;         using System.Threading.Tasks;          namespace EstructuraRepetitivaFor1        {            class Program            {                 static void Main(string[] args)                {                    int f;                     for(f=1;f<=100;f++)                     {                         Console.Write(f);                         Console.Write(\"-\");                    }                     Console.ReadKey();                 }}}     EducaTeach - 2025   INGRESAR 10 VALORES Y CALCULAR LA SUMA Y SU PROMEDIO                                              EducaTeach - 2025           using System;         using System.Collections.Generic;         using System.Linq;        using System.Text;        using     System.Threading.Tasks;        namespace EstructuraRepetitivaFor2 {             class Program {                 static void Main(string[] args) {                     int suma,f,valor,promedio;                     string linea;                    suma=0;                     for(f=1;f<=10;f++)                     {                         Console.Write(\"Ingrese valor:\");                         linea=Console.ReadLine();        valor=int.Parse(linea);                         suma=suma+valor;                     }                     Console.Write(\"La suma es:\");                     Console.WriteLine(suma);                    promedio=suma/10;                     Console.Write(\"El promedio es:\");                     Console.Write(promedio);                     Console.ReadKey();                }}}                                                        Pág. 133                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025           CALCULAR MCD         using System;          namespace MaxComDiv {             class Program {                 public static void Main(string[] args) {                     // Pedimos al usuario que ingrese los números                     Console.WriteLine(\"Ingrese el primer número\");                     int num1 = Convert.ToInt32(Console.ReadLine());                     Console.WriteLine(\"Ingrese el segundo número\");                     int num2 = Convert.ToInt32(Console.ReadLine());                       // Seleccionamos el mayor y el menor para asignarlos                     // a las variables \"a\" y \"b\" respectivamente                     int a = Math.Max(num1, num2);      EducaTeach - 2025              int b = Math.Min(num1, num2);                                                          EducaTeach - 2025                     // Declaramos la variable que guardará el resultado                     int res;                       // Creamos el ciclo encargado de hacer las iteraciones                     do {                         res = b; // Guardamos el divisor en el resultado                           b = a%b; // Guardamos el resto en el divisor                         a = res; // El divisor pasa al dividendo                     } while(b!=0);                       // Mostramos como resultado el último resto no nulo                     Console.WriteLine(\"El M.C.D. entre \"+num1+\" y \"+num2+\" es: \"+res);                     Console.ReadKey(true);                 }            }         }                                                               Pág. 134                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                     INTRODUCCIÓN AL LENGUAJE VISUAL                                                                C++                           → ¿Qué es?                        Es  un  entorno  de  desarrollo  integrado  (IDE)  y  un  compilador  para  el  lenguaje  C++,                       desarrollado por Microsoft.                        Una de las herramientas de desarrollo de Microsoft Visual Studio y se utiliza para crear                       aplicaciones de software en C++ que funcionen en sistemas operativos Windows.                         → Diferencia entre C++ y Visual C++                       C++:  Es  un  lenguaje  de  programación  estándar,  definido  por  especificaciones                        internacionales.     EducaTeach - 2025        Visual C++: Es una herramienta específica  para desarrollar en C++  con características      EducaTeach - 2025                         adicionales diseñadas para simplificar la creación de aplicaciones para Windows, como                       bibliotecas  gráficas,  soporte  para  interfaces  de  usuario  y  acceso  a  funciones  de                       Windows.                         Compatible  con  bibliotecas  como  MFC  (Microsoft  Foundation  Classes)  y  ATL  (Active                        Template Library) para simplificar el desarrollo de aplicaciones gráficas y componentes                        COM en Windows.                        → Integración con el sistema operativo Windows:                       Permite acceder fácilmente a las API de Windows para realizar tareas avanzadas como                        administración de memoria, creación de ventanas y gestión de procesos.                        ¿Dónde se utiliza?                        Para  el  desarrollo  de  software  para  Windows:  Aplicaciones  de  escritorio,  servicios  y                        herramientas de sistema.                        Para el diseño de juegos: Muchos motores de juegos utilizan Visual C++ para aprovechar                       las API de gráficos como DirectX.                         Para aplicaciones empresariales: Software que interactúa con bases de datos, redes y                       servicios empresariales.                         Para el desarrollo de controladores y software embebido: Gracias a su acceso a las API                       de bajo nivel.                                                       Pág. 135                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025             DECL  ARACIÓN DE VARIABLES:        Enteros  int :         int edad = 25;       // Variable entera inicializada         int año;             // Declaración sin inicialización        int x = 10, y = 20;  // Declaración múltiple           Caracteres  char :        char   letra = 'A';    // Variable de tipo carácter        char simbolo = '#';  // Otro carácter         char inicial;        // Declaración sin inicialización         Números reales  float, double :         float: Precisión simple.         float altura = 1.75f; // Variable de tipo flotante        float peso;           // Declaración sin inicialización      EducaTeach - 2025   double: Precisión doble.                                                                          EducaTeach - 2025            double distancia = 1234.5678; // Variable de tipo double        double pi = 3.14159;         // Usualmente para valores más precisos                Ejemplo de un algoritmo en C++ en modo consola  C++ :         #include <iostream> // Biblioteca para entrada/salida estándar        using namespace std;              c        int main() {             // Mostrar el mensaje en la consola            cout << \"Hola, Mundo!\" << endl;               // Pausar la ejecución para ver el resultado            system(\"pause\");              return 0; // Indica que el programa terminó correctamente         }                                                         Pág. 136                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                     Pasos para ejecutar un algoritmo en Visual C++  Visual Studio :                                     1.Abre el entorno de desarrollo Visual Studio.                                   2. Selecciona Archivo > Nuevo > Proyecto.                                  3. Elige Aplicación de consola (C++).                                  4. Asigna un nombre al proyecto y selecciona la ubicación.                                   5. Reemplaza el contenido del archivo main.cpp con tu código.                                  6. Presiona el menú Compilar > Compilar solución                                   7. Ejecuta el código > Depurar > Iniciar sin depurar                                2            EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                               3                                                                            Pág. 137                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                        4                      EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                       5                                                              Pág. 138                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                       6                                                                                               7                     Localiza el ejecutable ↓             A. Presiona el botón derecho sobre el nombre del proyecto             B. Selecciona la opción → Abrir carpeta en el Explorador           EducaTeach - 2025                                                            A                                        EducaTeach - 2025                                                      B                        Localiza          la        carpeta             bin→Debug.             Ahí estará el ejecutable con la             extensión *.exe                                                             Pág. 139                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                            ¡Vamos a la práctica con algoritmos secuenciales!                   Antes, veamos las partes de un algoritmo:               Explicación del código:                 1.  #include <string>                              Se incluye esta biblioteca para trabajar con cadenas de texto (std::string).                   2.  Variables:      EducaTeach - 2025   3.  getline(cin, ...):                                                                            EducaTeach - 2025                            string nombre, direccion, telefono; son cadenas de texto donde se almacenan los datos                            ingresados por el usuario.                                  Se utiliza para leer entradas completas, incluyendo espacios en blanco (como en nombres                             y direcciones).                   4.  Salida:                              Los datos ingresados se muestran organizados utilizando cout.                   5.  system(\"pause\");                              Detiene la consola para que el usuario pueda ver los resultados antes de que la ventana                            se cierre (opcional y específico de Windows).              La función cout, se utiliza para mostrar un mensaje en pantalla.         La función cin, se utiliza para ingresar un dato                                                            Pág. 140                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                       Algoritmo  que  solicita  el  nombre,  dirección  y  teléfono  de  un                                usuario, y luego los muestra en pantalla               #include <iostream>  // Biblioteca para entrada/salida estándar         #inc  lude <string>    // Biblioteca para trabajar con cadenas de texto         using namespace std;            int main() {             // Declaración de variables              string nombre;              string direccion;             string telefono;      EducaTeach - 2025       // Solicitar datos al usuario                                                                 EducaTeach - 2025                 cout << \"Introduce tu nombre: \";             getline(cin, nombre);  // Leer una línea completa de texto                cout << \"Introduce tu dirección: \";             getline(cin, direccion);  // Leer la dirección completa                cout << \"Introduce tu número de teléfono: \";              getline(cin, telefono);  // Leer el número de teléfono como texto              // Mostrar los datos ingresados              cout << \"\\n--- Información ingresada ---\\n\";             cout << \"Nombre: \" << nombre << endl;              cout << \"Dirección: \" << direccion << endl;              cout << \"Teléfono: \" << telefono << endl;              //   Pausar la consola (opcional)             system(\"pause\");                return 0;  // Fin del programa         }                                                         Pág. 141                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                      Algoritmo en visual C++ que solicite 2 datos, y presente en pantalla                                las 4 operaciones aritméticas; suma, resta, multiplicación, división,                                 promedio.           #include <iostream>  // Biblioteca para entrada/salida estándar         using namespace std;         int main() {             // Declaración de variables            double numero1, numero2;             double suma, resta, multiplicacion, division, promedio;               // Solicitar datos al usuario            cout << \"Introduce el primer número: \";                                              Entrada      EducaTeach - 2025         cout << \"Introduce el segundo número: \";                                                    EducaTeach - 2025            cin >> numero1;               cin >> numero2;              // Operaciones aritméticas             suma = numero1 + numero2;             resta = numero1 - numero2;                                                           Proceso            multiplicacion = numero1 * numero2;             division = numero1 / numero2;             promedio = (numero1 + numero2) / 2;              // Mostrar resultados             cout << \"\\n--- Resultados ---\\n\";            cout << \"Suma: \" << suma << endl;             cout << \"Resta: \" << resta << endl;             cout << \"Multiplicación: \" << multiplicacion << endl;                               Proceso            cout << \"Promedio: \" << promedio << endl;               // Pausar la consola (opcional)            system(\"pause\");               return 0;  // Fin del programa        }                                                       Pág. 142                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                        Algoritmo que calcula el área de un rectángulo.               #include <iostream>  // Biblioteca para entrada/salida estándar          using namespace std;          int main() {              // Declaración de variables              double base, altura, area;              // Solicitar datos al usuario              cout << \"Introduce la base del rectángulo: \";             cin >> base;      EducaTeach - 2025       cout << \"Introduce la altura del rectángulo: \";                                               EducaTeach - 2025               cin >> altura;                // Calcular el área (sin condicionales)                 ar  ea = base * altura;              // Mostrar el resultado             co  ut << \"\\nEl área del rectángulo es: \" << area << endl;               // Pausar la consola (opcional)             sy  stem(\"pause\");               return 0;  // Fin del programa         }            La función cout, se utiliza para mostrar un mensaje en pantalla.         La función cin, se utiliza para ingresar un dato          Recuerda:         El algoritmo secuencial no evalúa los resultados, simplemente se ejecuta línea por línea.                                                         Pág. 143                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                      EJERCICIOS CON ALGORITMOS SECUENCIALES               Pedir al usuario que ingrese la nota de 4 unidades, calcule el promedio y luego presente en pantalla el         resul  tado.          Pedir al usuario que ingrese un nombre, la nota de 4 unidades, calcule el promedio y luego presente          en pantalla el resultado.           Solicitar 10 datos a un usuario y desplegar individualmente de manera vertical.          Solicitar 10 datos a un usuario y desplegar de manera resumida horizontalmente. Debes concatenar          los datos.          Pedir 10 notas de 10 cursos a un usuario y mostrar en pantalla el resumen de forma vertical y el          promedio.     EducaTeach - 2025   Resolver la ecuación A =( (X + Y + Z) * (B + C))/10                                               EducaTeach - 2025              Resolver la fórmula (A + B)³               Mostrar hora actual del Sistema (investigar)          Mostrar descripción de hardware de Sistema (investigar)           Resolver la ecuación de primer grado: 2X + 20 = 4X + 10          Pedir al usuario que ingrese 10 nombres de empleados y su sueldo, luego los sume para obtener el          monto total.          Luego presentar en pantalla la suma total.          Pedir al usuario que solicite el nombre, su sueldo y venta mensual.          Para cada venta calcular el 5% de comisiones, luego sumarlo a su sueldo.           Crear un inventario de mercadería de productos electrónicos con los siguientes datos:         CODIGO          CANTIDAD          PRECIO          TOTAL         Luego mostrar en pantalla los 5 productos ingresados.                                                          Pág. 144                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                    ALGORITMOS CON CONDICIONALES                                 CONDICIONAL SIMPLE            Algoritmo que solicita la edad de una persona y, si es mayor a 17 años, muestra el mensaje \"Mayor         de edad\".          #include <iostream>        using namespace std;         int main() {             int edad;             // Solicitar la edad del usuario             cout << \"Introduce tu edad: \";            cin >> edad;              // Condición para verificar si es mayor de edad            if (edad > 17) {                 cout << \"Mayor de edad\" << endl;            }     EducaTeach - 2025   Algoritmo que solicita 2 datos, los suma, calcula el promedio, y si el promedio es mayor a 60, muestra   EducaTeach - 2025              return 0;         }          el mensaje \"Aprobado\".          #include <iostream>         using namespace std;         int main() {             double dato1, dato2, suma, promedio;                                                            La  función  cout,  se  utiliza  para  mostrar  un             // Solicitar los 2 datos al usuario             mensaje en pantalla.            cout << \"Introduce el primer dato: \";             cin >> dato1;                                   La función cin, se utiliza para ingresar un dato             cout << \"Introduce el segundo dato: \";             cin >> dato2;                                   Recuerda:                                                            La condicional simple, evalúa una condición            // Cal  cular la suma y el promedio             suma = dato1 + dato2;                           y lo presenta solo si se cumple.            promedio = suma / 2;             // Condicional para verificar si el promedio es mayor a 60             if (promedio > 60) {                cout << \"Aprobado\" << endl;             }             return 0;        }                                                         Pág. 145                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                    ALGORITMOS CON CONDICIONALES                                     CONDICIONAL DOBLE              Algoritmo  que  solicita  la  edad  de  una          Algoritmo que solicita la edad de una persona y, si        persona y, si es mayor a 17 años, muestra el         es mayor a 17 años, muestra el mensaje \"Mayor         mensaje \"Mayor de edad\", de lo contrario,            de edad\", de lo contrario, “es menor de edad”.         “es menor de edad”.                                                             #include <iostream>        #include <iostream>                                  using namespace std;        using   namespace std;                                                             int main() {        int main() {                                             double dato1, dato2, suma, promedio;             int edad;             // Solicitar la edad del usuario                     // Solicitar los 2 datos al usuario             cout << \"Introduce tu edad: \";                       cout << \"Introduce el primer dato: \";             cin >> edad;                                         cin >> dato1;     EducaTeach - 2025       // Condición para verificar         cout << \"Introduce el segundo dato: \";                    EducaTeach - 2025                 dad > 17) {                                                                 cin >> dato2;            if (e                 cout << \"Mayor de edad\" << endl;             } else {                                                                 // Calcular la suma y el promedio              }                                                                 promedio = suma / 2;                  cout << \"Menor de edad\" << endl;               suma = dato1 + dato2;              return 0;        }                                                        // Condicional doble para verificar el promedio                                                                 if (promedio > 60) {                                                                     cout << \"Aprobado\" << endl;                                                                 } else {                                                                     cout << \"No aprobado\" << endl;                                                                  }                                                                  return 0;                                                              }            La función cout, se utiliza para mostrar un mensaje en pantalla.           La función cin, se utiliza para ingresar un dato            Recuerda:           La  condicional  doble,  evalúa  dos  posibles  salidas  y  presenta  solo  una  según  se           cumpla.                                                        Pág. 146                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                ALGORITMOS CON CONDICIONALES                                CONDICIONAL ANIDADA               Algoritmo que solicita la edad de una persona.      Algoritmo que solicite 2 datos.       Si tiene más de 17 años \"Eres mayor de edad\"        Los sume y calcule el promedio.        Si tiene más de 25 años \"Eres adulto\"               Si es mayor 89 y menor o igual 100, \"Nota sobresaliente\"        Si tiene más de 70 años \"Eres adulto mayor\"         Si es mayor 69 y menor o igual 89, \"Nota aceptable\"       Si  tiene  menos  de  18  años  \"Eres  menor  de    Si es mayor 59 y menor o igual 70, \"Nota muy baja\"        edad\"                                               Si es mayor 0 y menor o igual 59, \"Nota no aprobada\"        #include <iostream>                                 #include <iostream>        using namespace std;                                using namespace std;         int main() {                                        int main() {           int edad;                                           double dato1, dato2, suma, promedio;             // Solicitar la edad del usuario                    // Solicitar los 2 datos al usuario     EducaTeach - 2025         // Condicional múltiple para clasificar la edad         cout << \"Introduce el segundo dato: \";   EducaTeach - 2025           cout << \"Introduce tu edad: \";                                                               cout << \"Introduce el primer dato: \";            cin >> edad;                                                               cin >> dato1;                                                                 cin >> dato2;           if (edad > 70) {                cout << \"Eres adulto mayor\" << endl;             } else if (edad > 25) {               cout << \"Eres adulto\" << endl;                  // Calcular la suma y el promedio                                                               suma = dato1 + dato2;            } else if (edad > 17) {                             promedio = suma / 2;                cout << \"Eres mayor de edad\" << endl;           } else {                                            // Clasificar la nota según el promedio                cout << \"Eres menor de edad\" << endl;           if (promedio > 89 \&\& promedio <= 100) {           }                                                       cout << \"Nota sobresaliente\" << endl;                                                               } else if (promedio > 69 \&\& promedio <= 89) {           return 0;                                               cout << \"Nota aceptable\" << endl;       }                                                       } else if (promedio > 59 \&\& promedio <= 70) {                                                                   cout << \"Nota muy baja\" << endl;                                                                } else if (promedio >= 0 \&\& promedio <= 59) {                                                                   cout << \"Nota no aprobada\" << endl;                                                               }                                                                 return 0;                                                            }                                                               Pág. 147                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            La función cout, se utiliza para mostrar un mensaje en pantalla.           La función cin, se utiliza para ingresar un dato            Rec  uerda:           La condicional anidada, evalúa muchas posibles salidas y presenta el mensaje según           la condición cumplida.             CON  TADORES Y ACUMULADORES:         A.     Un  contador  es  una  variable  que  se  utiliza  para       CONTADOR = CONTADOR + 1           llevar la cuenta de cuántas veces ocurre un evento o                 CONTADOR ++         se repite un proceso.            Generalmente,  se  inicializa  en  0  y  luego  se  va          incrementando  o  decrementando  a  medida  que  el          evento ocurre.     EducaTeach - 2025   B.     Un  acumulador  es  una  variable  que  se  utiliza  en   CONTADOR = CONTADOR + DATO       EducaTeach - 2025              programación para sumar, acumular o almacenar un         valor que se va modificando durante la ejecución de          un algoritmo o programa.          Se utiliza dentro de bucles o ciclos para mantener la          suma  (o  acumulación)  de  ciertos  valores,  como          números, cantidades o resultados.           Se     inicia  en  cero  (o  en  otro  valor  inicial)  y  luego se          actualiza repetidamente al sumar o modificar su valor         en cada iteración de un bucle.                El  contador  cuenta  (suma  o  resta)  de  forma  regresiva  o  progresiva              según la secuencia indicada.               El acumulador suma, resta, multiplica, resta o divide según la variable              indicada con el operador                                                             Pág. 148                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                      ALGORITMOS CON CONTADORES Y ACUMULADORES              Contador:  Algoritmo  que  solicite  4  datos  y        Acumulador:  Algoritmo  que  solicite  4  datos  y        cuente cuántas veces se ingresaron.                     acumule el total de los datos ingresados.           #include <iostream>                                     #include <iostream>         using namespace std;                                    using namespace std;          int main() {                                            int main() {            int dato1, dato2, dato3, dato4;                         int dato1, dato2, dato3, dato4;             int  contador  =  0;  //  Contador  de  cuántos  datos  se  han       int acumulador = 0; // Inicializamos el acumulador en 0        ingresado                                                                     // Solicitar los 4 datos y acumular la suma             // Solicitar los 4 datos y contar cuántos se ingresan       cout << \"Introduce el primer dato: \";            cout << \"Introduce el primer dato: \";                   cin >> dato1;             cin >> dato1;                                           acumulador += dato1;  // Acumulamos el primer dato            contador++;               cout << \"Introduce el segundo dato: \";                cout << \"Introduce el segundo dato: \";     EducaTeach - 2025       contador++;                              cout << \"Introduce el tercer dato: \";                EducaTeach - 2025                                                                     cin >> dato2;                                                                    acumulador += dato2;  // Acumulamos el segundo dato            cin >> dato2;                                                                       cin >> dato3;            cout << \"Introduce el tercer dato: \";                                                                    acumulador += dato3;  // Acumulamos el tercer dato            cin >> dato3;             contador++;              cout << \"Introduce el cuarto dato: \";                     cout << \"Introduce el cuarto dato: \";                                                                    cin >> dato4;             cin >> dato4;                                           acumulador += dato4;  // Acumulamos el cuarto dato            contador++;                                                                    // Mostrar el resultado de la suma             // Mostrar cuántos datos se ingresaron                  cout << \"La suma total de los 4 datos es: \" << acumulador <<            cout << \"Se ingresaron \" << contador << \" datos.\" << endl;   endl;             return 0;                                               return 0;        }                                                       }            Ejercicios para analizar y resolver con contadores y acumuladores:         Pedir  al  usuario  10  datos,  llevar  la  cuenta  de  los  datos  ingresados  y  mostrar  en         pantalla la suma total y la cuenta de los números ingresados.         Sumar 10 veces un mismo número.         Restar 10 veces un mismo número.         Dividir 10 veces un mismo número        Multiplicar 10 veces un mismo número                                                         Pág. 149                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                         BUCLES: FOR Y WHILE              Bucle for                                                Bucle while         Se     utiliza  cuando  sabes  cuántas  veces  Se  ejecuta  mientras  la  condición  sea         quieres que se ejecute el bloque de código.              verdadera.  Si  no  sabes  cuántas  veces                                                                 quieres  que  se  ejecute,  pero  tienes  una        Tiene  una  estructura  que  incluye  la  condición que se debe cumplir, este es el         inicialización, la condición de continuación  adecuado.         y la actualización del contador.                                                                  Sintaxis:         Sintaxis:                                                while (condición) {                                                                      // Bloque de código a ejecutar     EducaTeach - 2025  for (inicialización; condición; actualización)   }                                                 EducaTeach - 2025         {              // Bloque de código a ejecutar                                                                 Ejemplo:        }                                                                  #include <iostream>         Ejemplo:        #inclu    de <iostream>                                  using namespace std;          using namespace std;                                                                 int main() {         int main() {                                                 int i = 1;             // Contar de 1 a 5                                       // Contar de 1 a 5 usando while            for (int i = 1; i <= 5; i++) {                           while (i <= 5) {                 cout << \"Contador: \" << i << endl;            }                                                            cout << \"Contador: \" << i << endl;            return 0;                                                    i++; // Incremento manual del         }                                                        contador                                                                      }                                                                     return 0;                                                                 }                                                                    Pág. 150                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                    Los bucles son muy útiles en programación y permiten ejecutar una acción                  repetidamente con poco código sin declarar muchas variables como en un                                                  algoritmo secuencial.                                                                  VENTAJAS DE LOS BUCLES                                                                 1. Reducción de código repetitivo                                   BUCLES: DO WHILE              Los  bucles  permiten  ejecutar  un  bloque  de  código                                                                  múltiples veces sin tener que escribirlo manualmente                                                                 para cada iteración.                                                                   2. Mayor eficiencia                                                                 Los bucles hacen que el programa sea más eficiente         Bucle do-while                                           al reducir la redundancia y eliminar la necesidad de         Es similar al while, pero la diferencia es que siempre   escribir el mismo código repetidamente.        ejecuta al menos una vez el bloque de código, incluso         si la condición no se cumple.                            3. Flexibilidad                                                                 Los  bucles  permiten  que  el  código  se  ejecute  un        Sintaxis:                                                número  variable  de  veces,  lo  que  los  hace  muy         do {                                                     flexibles.     EducaTeach - 2025   } while (condición);                    Los  bucles  son  ideales  para  automatizar  tareas  que   EducaTeach - 2025             // Bloque de código a ejecutar                                                                 4. Automatización de tareas repetitivas                                                                    deben  repetirse  múltiples  veces,  como  procesar        Ejemplo:                                                                  elementos  de  una  lista,  realizar  cálculos,  o  leer  y        #include <iostream>                                                                 procesar datos de un archivo.        using namespace std;           int main() {                                               5. Menor posibilidad de errores             int i = 1;                                           Al  usar  un  bucle,  reduces  la  posibilidad  de  cometer            // Contar de 1 a 5 usando do-while                   errores  manualmente  al  escribir  múltiples  líneas  de             do {                                                 código repetitivo.                 cout << \"Contador: \" << i << endl;                i++; // Incremento manual del contador           6. Manejo de datos dinámicos             } while (i <= 5);                                    Los bucles permiten manejar datos dinámicos (como             return 0;                                            listas o colecciones) sin  necesidad  de saber cuántos        }                                                        elementos se van a procesar con antelación.                                                                  7. Facilita el control de flujo                                                                 Los  bucles  permiten  un  control  fácil  y  eficiente  del         Los    bucles  ofrecen  eficiencia,  flexibilidad  y    flujo  de  ejecución  de  un  programa,  lo  que  es          mantenibilidad,  lo  que  los  convierte  en  una       especialmente útil cuando hay múltiples condiciones         herramienta  esencial  en  cualquier  lenguaje  de      o pasos que deben cumplirse de manera repetitiva.          programación.                                                                 8. Mejora en la complejidad algorítmica         Al  utilizarlos  adecuadamente,  puedes  reducir        En  algunos  casos,  los  bucles  pueden  simplificar  un          significativamente  la  complejidad  de  tu  código,    algoritmo  y  hacerlo  más  eficiente,  especialmente         automatizar  tareas  repetitivas  y  mejorar  el                                                                 cuando se tratan grandes volúmenes de datos.         rendimiento de tus programas.                                                        Pág. 151                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Programa  en  Visual  C++  que  presenta  un  menú  con  cuatro  platillos.  El  Programa  que  solicita  10  datos,  lo  suma  y       programa  permite  al  usuario  elegir  un  platillo,  muestra  el  monto   presenta el resultado, con ciclo for:        correspondiente y sigue solicitando la opción del menú hasta que el usuario       decida salir                                                       #include <iostream>        #include <iostream>                                                using namespace std;        using namespace std;                                                                          int main() {        int main() {                                                           // Declaración de variables           // Declaración de variables                                        int numero, suma = 0;            int opcion;           bool continuar = true;                                             // Solicitar y sumar los 10 números                                                                               for (int i = 1; i <= 10; i++) {            // Menú con precios                                                    cout << \"Ingresa el número \" << i << \": \";           const float precioPlatillo1 = 50.0;                                    cin >> numero;            const float precioPlatillo2 = 75.0;                                    suma += numero; // Acumular la suma           const float precioPlatillo3 = 100.0;                                                                              }              loat precioPlatillo4 = 125.0;           const f                                                                              // Mostrar el resultado           // Bucle principal                                                 cout  <<  \"\\nLa  suma  de  los  10  números  es:  \"  <<            while (continuar) {                                            suma << endl;               // Presentar el menú                << \"\\n===== Menú de Platillos =====\" << endl;               cout                                                           return 0;               cout << \"1. Platillo 1 - $\" << precioPlatillo1 << endl;    }                cout << \"2. Platillo 2 - $\" << precioPlatillo2 << endl;                cout << \"3. Platillo 3 - $\" << precioPlatillo3 << endl;      Programa  que  solicita  10  datos,  lo  suma  y               cout << \"4. Platillo 4 - $\" << precioPlatillo4 << endl;     EducaTeach - 2025           cout << \"Elige una opción: \";                #include <iostream>                          EducaTeach - 2025                cout << \"5. Salir\" << endl;                                                                          presenta el resultado, con ciclo while:                cin >> opcion;                 // Procesar la opción elegida                                                                          using namespace std;                switch (opcion) {                    case 1:              cout << \"Has elegido el Platillo 1. Total: $\" << precioPlatillo1 << endl;                                                                               // Declaración de variables                       break;                                             int main() {                                                                               int numero, suma = 0, contador = 1;                   case 2:                        cout << \"Has elegido el Platillo 2. Total: $\" << precioPlatillo2 << endl;       // Ciclo while para solicitar y sumar 10 números                       break;                    case 3:                                                    while (contador <= 10) {                       cout << \"Has elegido el Platillo 3. Total: $\" << precioPlatillo3 << endl;           cout << \"Ingresa el número \" << contador << \":                                                                           \";                       break;                                                     cin >> numero;                    case 4:                                                        suma += numero; // Acumular la suma                       cout << \"Has elegido el Platillo 4. Total: $\" << precioPlatillo4 << endl;                        break;                                                     contador++;     // Incrementar el contador                                                                              }                   case 5:              cout << \"Gracias por tu visita. ¡Hasta pronto!\" << endl;                                                                              // Mostrar el resultado                       continuar = false; // Salir del bucle                  cout  <<  \"\\nLa  suma  de  los  10  números  es:  \"  <<                        break;                    default:                                               suma << endl;                        cout << \"Opción no válida. Intenta de nuevo.\" << endl;       return 0;               }                                                          }           }             return 0;       }                                                       Pág. 152                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                      LAS LISTAS:                                    Son estructuras de datos que permiten almacenar una colección de                                   elementos. En C++, las listas se implementan a través de arreglos o                                    vectores.  Dependiendo  de  la  cantidad  de  dimensiones,  estas                                    pueden       clasificarse     en    listas    unidimensionales          y    listas                                   bidimensionales.           Lista Unidimensional  Arreglo Unidimensional               secuencia lineal de elementos de un mismo tipo. Esta secuencia se almacena en una        Es una         sola  fila  o  columna.  En  C++,  un  arreglo  unidimensional  puede  verse  como  una  lista  de        elementos.          Ejemplo:         Un arreglo unidimensional es un conjunto de elementos de un solo tipo, organizados en una         línea (una dimensión).           Sintaxis:     EducaTeach - 2025   tipo nombre_del_arreglo[tamaño];                                                                  EducaTeach - 2025            Ejemplo:         #include <iostream>           using namespace std;         int main() {             // Declarar un arreglo unidimensional de enteros             int numeros[5] = {1, 2, 3, 4, 5};             // Mostrar los elementos del arreglo             for (int i = 0; i < 5; i++) {                 cout << \"Elemento \" << i + 1 << \": \" << numeros[i] << endl;            }              return 0;         }                Cada elemento de un arreglo unidimensional se puede localizar por                                 medio de un índice que inicia en posición 0.                                                             Pág. 153                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          Lista Bidimensional  Arreglo Bidimensional         Es un arreglo de arreglos. Es una estructura de datos que se organiza en filas y columnas,         formando una matriz. Cada posición dentro de esta lista se puede acceder utilizando dos         índices: uno para la fila y otro para la columna.          Ejemplo:         Un arreglo bidimensional es un conjunto de arreglos, donde cada arreglo representa una         fila, y los elementos dentro de cada arreglo son las columnas.           Sintaxis:         tipo nombre_del_arreglo[filas][columnas];          Ejemplo:        #include <iostream>         using namespace std;           int main() {      EducaTeach - 2025       // Declarar un arreglo bidimensional de enteros (3 filas y 2 columnas)                        EducaTeach - 2025              int matriz[3][2] = {{1, 2}, {3, 4}, {5, 6}};               // Mostrar los elementos de la matriz             for (int i = 0; i < 3; i++) {                for (int j = 0; j < 2; j++) {                     cout << \"Elemento [\" << i << \"][\" << j << \"]: \" << matriz[i][j] << endl;                 }            }               return 0;        }                       Cada elemento de un arreglo bidimensional se puede localizar por                medio de dos índices que inician en posición 0, en posición X y Y.                                                             Pág. 154                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025         IMPRIMIR  DATOS  DE  UN  ARREGLO                         IMPRIMIR  DATOS  DE  UN  ARREGLO        UNIDIMENSIONAL                                           BIDIMENSIONAL  CON  3   ILAS  Y  2                                                                COLUMNAS  3 GRUPOS DE DATOS , DONDE        #include <iostream>                                      LOS         VALORES           SE        IMPRIMEN       using namespace std;                                     INDIVIDUALMENTE SIN USAR BUCLES         int main() {           // Declarar un arreglo unidimensional con 5          #include <iostream>        datos                                                    using namespace std;            int numeros[5] = {10, 20, 30, 40, 50};                                                                int main() {           // Imprimir cada elemento individualmente sin            // Declarar un arreglo bidimensional de 3 filas y 2       bucles                                                   columnas                                                                    int matriz[3][2] = {            cout << \"Elemento 1: \" << numeros[0] << endl;           cout << \"Elemento 2: \" << numeros[1] << endl;                {1, 2},  // Fila 1            cout << \"Elemento 3: \" << numeros[2] << endl;                {3, 4},  // Fila 2                                                                        {5, 6}   // Fila 3            cout << \"Elemento 4: \" << numeros[3] << endl;           cout << \"Elemento 5: \" << numeros[4] << endl;            };          }                                                            // Imprimir cada elemento sin usar bucles     EducaTeach - 2025      return 0;                               cout << \"Elemento [0][1]: \" << matriz[0][1] << endl;   EducaTeach - 2025                                                                    cout << \"Elemento [0][0]: \" << matriz[0][0] << endl;                                                                       cout << \"Elemento [1][0]: \" << matriz[1][0] << endl;         Ejemplo  de  un  arreglo  bidimensional  que                                                                    cout << \"Elemento [1][1]: \" << matriz[1][1] << endl;          almacena  los  nombres  y  edades  de  tres         personas.  Cada  fila  contiene  los  datos  de                                                                    cout << \"Elemento [2][1]: \" << matriz[2][1] << endl;        una persona: nombre y edad. Es una matriz                   cout << \"Elemento [2][0]: \" << matriz[2][0] << endl;         de 3 X 2.                                                                    return 0;                                                                }           #include <iostream>         #include <string>  // Para usar strings          using namespace std;          int main() {              // Declarar un arreglo bidimensional para 3 personas (nombre y edad)             string personas[3][2] = {                  {\"Juan\", \"25\"},  // Persona 1: nombre y edad                 {\"Maria\", \"30\"}, // Persona 2: nombre y edad                  {\"Carlos\", \"22\"} // Persona 3: nombre y edad             };               // Imprimir los datos de cada persona sin bucles             cout << \"Persona 1 - Nombre: \" << personas[0][0] << \", Edad: \" << personas[0][1] << endl;              cout << \"Persona 2 - Nombre: \" << personas[1][0] << \", Edad: \" << personas[1][1] << endl;              cout << \"Persona 3 - Nombre: \" << personas[2][0] << \", Edad: \" << personas[2][1] << endl;              return 0;         }                                                       Pág. 155                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                                                    RAZONAMIENTO LÓGICO                                                                                  EL ALGORITMO                                               Presaberes                         PROGRAMACIÓN EN C++          EducaTeach - 2025   Unidad 4                                                                                          EducaTeach - 2025                                                                                             EL PENSAMIENTO COMPUTACIONAL                                                                                  METDOLOGÍA STEAM                                                     Crear                         METODOLOGÍA ABP                                                                                  PROGRAMACIÓN POR BLOQUES                                                                                  LA ROBÓTICA                                                                                  SEÑAL DIGITAL Y ANALOGICA                                                                                  PLACAS DE PROGRAMACIÓN                                                                                  PROYECTOS STEAM                                                                          Pág. 156                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                      EL PENSAMIENTO COMPUTACIONAL           El pensamiento computacional nos enseña a ser        ingeniosos.       Se     trata     de     descomponer        problemas         complejos       en      partes      más        manejables,  identificar  patrones,  abstraer        información esencial y diseñar soluciones paso        a  paso  que  puedan  ser  ejecutadas  por  un  ser        humano o una máquina.         Nos  ayuda  a  pensar  y  aplicar  soluciones  a        diferentes campos, como:        Ingeniería, economía, artes, sociología, química,        etc.               Aplicamos  el  pensamiento  algorítmico,  para  obtener  habilidad  de  ejecutar,     EducaTeach - 2025   evaluar, entender y crear procedimientos computacionales.                                         EducaTeach - 2025                  Todos  tenemos  la  habilidad  de  pensar  y  procesar,  pero  el  pensamiento             computacional nos ayuda ordenar nuestras ideas y aplicarla de manera efectiva             en la solución.                                            Debemos entender y ejecutar un procedimiento paso por                                         paso y poder crear nuevos algoritmos.                                         También  aplicamos  la  lógica  computacional  que  es  el                                         proceso  de  pensamiento  enfocado  en  formular  un                                        problema  y  generar  posibles  soluciones  a  través  de  una                                        computadora.            El pensamiento computacional nos permite desarrollar habilidades para resolver un         problema, aplicando las matemáticas, la ciencia, la tecnología, la ingeniería y las artes.                                                              Pág. 157                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 ¿Cuál es el resultado de estas grandes combinaciones?              ¡Presentar               proyectos              creativos             e        innovadores              tecnológicamente!,  donde  el  (la)  alumno  (a)  plasma  sus              ideas y ve el resultado; materializa sus ideas.               Beneficios:         A. Desarrollo del pensamiento lógico         B. Estimula la creatividad         C. Interés por la innovación         D. Crea compromiso y perseverancia        E. Mejora el pensamiento crítico         F. Aumenta autoestima y trabajo cooperativo (grupal)     EducaTeach - 2025   G. Estimula y desarrollo destrezas cognitivas y motrices                                          EducaTeach - 2025                 introduce fácilmente en la programación        H. Se        I. Desarrolla la inteligencia lógico-matemática y lingüística         J. Aplica la ciencia, tecnología, matemática, las artes y materializa sus ideas por medio        de prototipos poniéndolos en funcionamiento.                  Etapa 1:                EL RAZONAMIENTO LÓGICO:  Es habilidad de              pensar,  procesar  y  utilizar  información  para  adquirir             conocimientos, entender el mundo y tomar las mejores             decisiones  adecuadas  para  presentar  resultados             efectivos,  tanto  en  la  vida  real;  como  en  las              matemáticas, ciencias y tecnología.               Etapa 2:                                                             Pág. 158                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                EL  ALGORITMO:  para  comprender  esta  etapa;  se  empieza  resolviendo              problemas en la vida cotidiana, como desayunar, dormir, prepararse para ir al             colegio, bañarse, leer una obra literaria, resolver un problema matemático, etc.                Todos los días aplicamos algoritmos en la vida cotidiana para resolver y realizar              tareas; pero  antes,  conozcamos  sus  etapas ya que el  algoritmo  es  ordenado,              con sentido y finito.                En IoT (Internet of Things), el algoritmo es lo que mantiene la lógica para que             los aparatos estén conectados y así interactuar con los seres humanos.                               Todo aparato electrónico tiene código grabado para funcionar, a                              ese código se le llama código binario. Es como los seres humanos                             se comunican con palabras, símbolos o señas; el código binario es     EducaTeach - 2025       acciones y presentar resultados.                                                              EducaTeach - 2025                             un tipo de lenguaje que la computadora entiende para ejecutar las                                  ¿Y DÓNDE ESTA PRESENTE LA PROGRAMACIÓN?               En la economía, en la tecnología y en la vida real.                     Etapa 3:                                                              Pág. 159                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 LA PROGRAMACIÓN              ¿Qué es?              En  la  robótica  es  fundamental,  ya  que  define  el  comportamiento  y  las              capacidades de los robots.             Mediante  códigos  e  instrucciones,  los  robots  son  capaces  de  realizar  tareas,             interactuar con su entorno y adaptarse a diferentes situaciones.              ¿Cómo se integra la programación en la robótica?              1. Propósito de la programación en robótica             Control  del  hardware:  La  programación  permite  controlar  motores,  sensores,              cámaras y otros componentes físicos del robot.             Automatización  de  tareas:  Define  procesos  y  rutinas  que  el  robot  ejecuta  de             forma autónoma.              Interacción  con  el  entorno:  Los  algoritmos  interpretan  datos  de  sensores  para             tomar decisiones, como evitar obstáculos o seguir líneas.     EducaTeach - 2025   2. Lenguajes de programación comunes                                                              EducaTeach - 2025                 Python: Popular por su facilidad de uso y soporte en bibliotecas como ROS (Robot             Operating System).             C/C++:  Usado  para  programación  de  bajo  nivel,  especialmente  en  sistemas              embebidos y controladores.             Java: Común en robots educativos y plataformas como LEGO Mindstorms.             MATLAB: Ideal para simulaciones, análisis de datos y control robótico.             Scratch: Utilizado en la robótica educativa para introducir a los niños a conceptos              básicos de programación.              3. Plataformas y entornos de desarrollo              ROS  (Robot  Operating  System):  Marco  para  construir  aplicaciones  robóticas             complejas con herramientas de simulación y control.             Arduino  IDE:  Usado  para  programar  microcontroladores  que  controlan  robots             simples.              Blockly:  Entorno  visual  que  facilita  la  programación  mediante  bloques,             especialmente en robótica educativa.             VEXcode: Plataforma diseñada para robots educativos como VEX Robotics.              4. Áreas de aplicación             Educación: Fomenta el aprendizaje de STEM en proyectos escolares.                                                          Pág. 160                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Industria: Robots programados para ensamblar productos, realizar inspecciones o              manejar materiales peligrosos.             Investigación:  Robots  autónomos  para  explorar  entornos  como  el  espacio  o  el             fondo del océano.               Hogar: Robots aspiradores o asistentes personales.               En  conclusión,  es  el  puente  que  conecta  las  ideas  con  las  capacidades  de  los             robots,  permitiendo  desarrollar  desde  proyectos  educativos  hasta  aplicaciones             industriales avanzadas.                                 Etapa 4:                                 LA ROBÓTICA                                En pocas palabras, es como materializar el razonamiento lógico,     EducaTeach - 2025   ¡EXISTE  UN  MAL  CONCEPTO  SOBRE  ESTE  TEMA  CUANDO  NO  SE  PUEDE  DESARROLLAR  DE  LA         EducaTeach - 2025                               tocar de forma física la programación.                MANERA EFECTIVA Y PROVECHOSA CON EL ALUMNO (A)!             Cuando  no  hay  resultado,  fácilmente  decimos:  no  me  interesa,  no  encuentro  sentido.  ¡Pero                   haremos que esto sea diferente!              El fin educativo no solo es crear prototipos autónomos; claro es una ciencia que              una  varias  disciplinas  y  ramas  de  la  informática,  para  crear  prototipos              autónomos que agilicen y faciliten alguna tarea.              Entonces…              ¿Cómo aplicar el pensamiento computacional en la educación?             El objetivo es que los estudiantes se inicien desde edades muy tempranas en el             razonamiento lógico sistemático de forma interactiva y lo puedan desarrollar en              diferentes áreas de su carrera (vida cotidiana, primaria, básicos, diversificado y             universidad).                                                                 Pág. 161                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Con  esta  metodología  podrás  aplicar  tus  conocimientos  de  Ciencias,  Artes,              Matemáticas, Ingeniería; todo esto con la ayuda de la tecnología, ya que esta             última será el puente de conexión entre las demás disciplinas.                ¿QUÉ HERRAMIENTAS SE UTILIZAN?             Existen varios programas (software) se simulación y programación como:              Microbit, Scratch, otros.             Arduino.             Robomind, otros.               Hay hardware especial (microcontroladores)              Micro bit              Arduino, otros.      EducaTeach - 2025   ¿Qué son?                                                                                         EducaTeach - 2025                  Son pequeñas tarjetas programables diseñadas para que aprender a programar             sea fácil, divertido y al alcance de todos.                Gracias  a  la  gran  cantidad  de  sensores  que  incorpora,  sólo  con  la  tarjeta  se             pueden llevar a cabo centenares de proyectos. También es una plataforma IoT              (Internet of Things), lo que la hace muy interesante para usuarios avanzados.                         ¿Qué puedo hacer con Arduino?                                                                  Pág. 162                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                ¡Lo  que  el alumno (a)  se  imagine!, desde interactuar  con la naturaleza hasta              crear grandes soluciones que nos faciliten la vida.                       EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                    PROYECTOS                                                           BASADOS EN                                                                     Y                                                                    Pág. 163                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 Los  grandes  beneficios  de  aplicar  estas               metodologías.                           EducaTeach - 2025                                                                                                     EducaTeach - 2025                                 Para  nuestros  proyectos  practicaremos  y               aplicaremos lo siguiente ↓:                A. Aplicación de la ciencia para obtener energía del sol.             B. Utilización de las matemáticas para hacer cálculos precisos.             C. Aplicación la ingeniería para inventar, diseñar e innovar.              D.  Utilización  de  la  tecnología  para  diseñar  nuestros  algoritmos  y  así  hacer             funcionar nuestro prototipo.                                                            Pág. 164                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          ¿QUÉ SIGNIFICA STEAM Y ABP?           STEAM es un enfoque educativo que integra cinco áreas clave de conocimiento y habilidades:          S - Ciencia (Science)          T - Tecnología (Technology)         E - Ingeniería (Engineering)         A - Arte (Art)         M - Matemáticas (Mathematics)           Este  enfoque  busca  fomentar  el  aprendizaje  interdisciplinario,  donde  los  estudiantes  desarrollan         habilidades  críticas  para  resolver  problemas  del  mundo  real,  combinando  la  creatividad  con  el         conocimiento  técnico.  El  objetivo  es  preparar  a  los  estudiantes  para  enfrentar  los  retos  futuros  en         diversas áreas profesionales.           Elementos de STEAM:         Ciencia (Science): Fomentar el entendimiento de conceptos científicos mediante la experimentación y         el análisis.         Tecnología  (Technology):  Uso  de  herramientas  tecnológicas  para  mejorar  el  aprendizaje  y  resolver      EducaTeach - 2025   Ingeniería  (Engineering):  Aplicación  de  principios  de  ingeniería  para  diseñar,  construir  y  solucionar   EducaTeach - 2025        problemas.           problemas.         Arte (Art): Incorporar creatividad y expresión artística para mejorar la resolución de problemas.         Matemáticas (Mathematics): Uso de las matemáticas como base para comprender patrones, realizar            cálculos y tomar decisiones informadas.         ABP  significa  Aprendizaje  Basado  en  Proyectos  (Project-Based  Learning  en  inglés).  Es  una          metodología pedagógica en la que los estudiantes aprenden a través de la investigación y resolución de         problemas reales, trabajando en proyectos prácticos.          Elementos del ABP:         Proyecto  central:  Los  estudiantes  trabajan  en  un  proyecto  significativo  que  les  desafía  a  aplicar  lo          aprendido.         Investigación y exploración: Los estudiantes investigan para resolver problemas auténticos.         Colaboración: Trabajo en equipo para fomentar habilidades de comunicación y cooperación.         Evaluación continua: Retroalimentación a lo largo del proceso del proyecto, no solo al final.         Aplicación del conocimiento: El conocimiento adquirido se utiliza para abordar situaciones del mundo         real.          En conclusión:         STEAM  integra  Ciencia,  Tecnología,  Ingeniería,  Arte  y  Matemáticas  para  una  educación         interdisciplinaria.         ABP es un enfoque donde los estudiantes aprenden resolviendo problemas del mundo real mediante         proyectos prácticos.                                                       Pág. 165                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                PASOS PARA EL DISEÑO DE PROYECTOS STEAM Y ABP:             1. Descomposición             Se trata de dividir un problema grande en partes más pequeñas que sean más fáciles de entender y resolver.              ¿Cómo?             Identifica los componentes principales del problema.             Divide cada componente en tareas específicas.             Sigue desglosando hasta que cada tarea sea manejable.             Ejemplo:             Si el objetivo es \"crear un sistema eficiente\", primero divides el sistema en \"entrada\", \"procesamiento\" y \"salida\". Luego detallas             cada parte.              2. Reconocimiento de patrones             Consiste en buscar similitudes o tendencias en problemas similares o dentro del mismo problema.              ¿Cómo?             Observa cómo se han resuelto problemas parecidos en el pasado.             Identifica pasos o elementos que se repiten.             Usa esas similitudes para predecir o simplificar la solución.             Ejemplo:             Si notas que muchos problemas involucran \"entrada de datos\" y \"procesamiento de datos\", puedes crear un enfoque estándar para     EducaTeach - 2025     3. Abstracción                                                                                  EducaTeach - 2025             manejar cualquier tipo de entrada, sin importar el contexto.                Implica enfocarte en los aspectos más importantes del problema y descartar detalles irrelevantes.              ¿Cómo?             Identifica qué información es esencial para resolver el problema.             Elimina distracciones o datos que no afectan la solución.             Simplifica el problema para trabajar en lo más relevante.              Ejemplo:             Si estás diseñando un sistema de alerta, te enfocas en \"umbral crítico\" y \"notificación\", sin preocuparte inicialmente por el color o             estilo del mensaje.              Diseño de algoritmos (Etapa final)             Después de aplicar estas tres etapas, se diseña una solución paso a paso para resolver el problema.              ¿Cómo?             Define claramente las acciones que debe realizar el sistema.             Ordena esas acciones de forma lógica y eficiente.             Evalúa y ajusta según sea necesario.             Ejemplo:             Si necesitas calcular algo repetitivo, diseñas un proceso que recorra todos los datos relevantes y aplique el cálculo únicamente a             los valores importantes.                                                             Pág. 166                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Conozcamos algunos elementos para practicar con este fascinante mundo del              pensamiento computacional; exploremos algunos conceptos y prototipos.               PLACAS DE PROGRAMCIÓN:                Arduino Nano                                      Arduino Mega                       Arduino Uno                                       Micro bit     EducaTeach - 2025                                                                                                     EducaTeach - 2025                           Raspberry pi                                      Arduino ESP32                                                                          Pág. 167                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                    PRESENTACIÓN DE UN DIAGRAMA DE LA PLACA PROGRAMABLE ARDUINO                                                            NANO          Arduino Nano es una         placa de desarrollo de         tamaño          compacto,        comp  leta y compa ble        con    protoboards, basada        en                        el        microcontrolador ATme         ga328P. Tiene 14 pines         de entrada/salida digital          de los cuales 6 pueden         ser usando con PWM , 6         entradas analógicas, un         cristal                  de        16Mhz, conexión Mini         USB,      terminales  y  para     EducaTeach - 2025   botón de reseteo.                                                                                 EducaTeach - 2025        conexión                                 un                     ICSP                             Por  ser  pequeña,  se  utiliza  un  Protoboard             para que sea  más  fácil  de  implementar  en             los proyectos.                                                                 Pág. 168                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Componentes electrónicos utilizados:                                 Arduino UNO o Nano:                               Donde grabaremos la programación por bloques.  Es el cerebro del carro, controlando                               los motores y recibiendo las señales del control remoto.                        Dos Motores DC:                    Estos motores DC que permitirán que el carro se mueva.                           Módulo Puente H (L298N o L293D):                       Te permitirá controlar tanto la dirección (adelante/atrás) como la velocidad de los motores.       EducaTeach - 2025      Control Remoto Infrarrojo (IR) o Bluetooth:                                                    EducaTeach - 2025                              Módulo Bluetooth (HC-05): Permite controlar el carro desde un smartphone a través de                           Bluetooth.                                                  Cables Jumper y Protoboard:                                                Donde diseñaremos el circuito y haremos las conexiones.                          Batería o Fuente de Alimentación:                      Una batería de 9V o un pack de baterías recargables es ideal. También necesitarás una                      alimentación de 5V para el Arduino.                                   Sensor ultrasónico:                               Para calcular distancias por medio de ecuaciones                                                            Pág. 169                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                   Muchos de los proyectos recibirán datos de             la naturaleza…                     EducaTeach - 2025                                                                                                     EducaTeach - 2025                             Las señales análogas se pueden percibir en todos los lugares, por ejemplo, la             naturaleza  posee  un  conjunto  de  estas  señas  como  es  la  luz,  la  energía,  el             sonido, etc., estas son señales que varían constantemente.               Muchos de nuestros proyectos funcionarán según los datos             obtenidos de la naturaleza.             Utilizaremos la el IDE Arduino para programar las placas de              programación Arduino.             En algunos proyectos utilizaremos la programación por bloques.                                                              Pág. 170                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Para simular nuestros proyectos, utilizaremos la plataforma Tinkercad.              Tinkercad, es una plataforma para simular proyectos y luego descargarlos a la             placa de programación Arduino.                Solo debes tener una cuenta Gmail.             ¡Iniciemos!                Paso 1:             Abrir el navegador Chrome y escribir el              enlace:             https://www.tinkercad.com/login         EducaTeach - 2025                                                                                                     EducaTeach - 2025                          Paso 2:             Hacer clic sobre el botón Cuenta personal                       Paso 3:             Hacer clic sobre el botón Iniciar Sesión con             una cuenta de Google               Debes aceptar los términos para continuar.                                                          Pág. 171                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                       Paso 4:             Hace clic sobre el botón Crear                Opción Circuito             EducaTeach - 2025     Esperar hasta que cargue el entorno de diseño de Tinkercad.                                     EducaTeach - 2025                                                                                        Pág. 172                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                    USO DEL ENTORNO DE DESARROLLO ARDUINO               1. Abrir el programa Arduino desde el Menú Inicio.             2. Guardarlo según lo recomienda el programa.             3. Escribir o pegar el código             4. Compilar para buscar errores en el algoritmo              5. Conectar la placa y configurar según el puerto detectado             6. Subir el código (graba el código como binario en la placa)                                 4        EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                   3                          6                                                                                     5                                                           Pág. 173                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                 Proyecto A: Creación de un sistema de control de tráfico               Habilidades desarrolladas con STEAM:                   Ciencia:  Entender  el  flujo  de  corriente  y  el  comportamiento  de  los             LEDs.               Tecnología:  Uso  de  la  programación  de  Arduino  y  el  entorno  de              desarrollo.                Ingeniería: Diseño del circuito y elección de componentes adecuados.     EducaTeach - 2025       Matemáticas:  Uso  de  tiempos  de  espera  (delay)  para  controlar  el                      EducaTeach - 2025                    funcionamiento del semáforo.                 Arte: Diseño visual del semáforo, incluyendo la disposición de los LEDs             y la estética del proyecto.                 Este proyecto ilustra cómo el pensamiento computacional se utiliza             para  integrar  conocimientos  y  habilidades  de  diferentes  disciplinas              STEAM.           MATERIALES:          PROTOBOARD (GALLETA)           PLACA DE PROGRAMACIÓN ARDUINO           CABLES DE CONEXIÓN (JUMPERS)           FOCOS LED (ROJO, MARILLO, VERDE)          3 RESISTENCIAS DE 200 OHMS            Si  son  dos  semáforos,  duplicar  los  materiales  (menos  la  placa  de          programación Arduino)                                                       Pág. 174                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                    Diagrama del proyecto A:                   EducaTeach - 2025                                                                                                     EducaTeach - 2025                                                                                         Pág. 175                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025            CÓDIGO REAL DE PROGRAMACIÓN EN IDE ARDUINO:            // Pines para el Semáforo 1          const int red1 = 2;         const int yellow1 = 3;          const int green1 = 4;           // Pines para el Semáforo 2         const int red2 = 5;          const int yellow2 = 6;          const int green2 = 7;          void se  tup() {           // Configurar los pines del Semáforo 1 como salida            pinMode(red1, OUTPUT);            pinMode(yellow1, OUTPUT);            pinMode(green1, OUTPUT);            // Configurar los pines del Semáforo 2 como salida            pinMode(red2, OUTPUT);            pinMode(yellow2, OUTPUT);     EducaTeach - 2025   }                                                                                                 EducaTeach - 2025              de(green2, OUTPUT);           pinMo          void loop() {           // SEMÁFORO 1 en verde, SEMÁFORO 2 en rojo           digitalWrite(green1, HIGH);  // Encender el verde del semáforo 1            digitalWrite(red2, HIGH);    // Encender el rojo del semáforo 2            delay(5000);                 // Mantenerlo encendido por 5 segundos            // SEMÁFORO 1 en amarillo, SEMÁFORO 2 en rojo            digitalWrite(green1, LOW);   // Apagar el verde del semáforo 1            digitalWrite(yellow1, HIGH); // Encender el amarillo del semáforo 1            delay(2000);                 // Mantenerlo encendido por 2 segundos            digitalWrite(yellow1, LOW);  // Apagar el amarillo del semáforo 1            // SEMÁFORO 1 en rojo, SEMÁFORO 2 en verde            digitalWrite(red1, HIGH);    // Encender el rojo del semáforo 1            digitalWrite(red2, LOW);     // Apagar el rojo del semáforo 2           digita  lWrite(green2, HIGH);  // Encender el verde del semáforo 2           delay(5000);                 // Mantenerlo encendido por 5 segundos              // SEMÁFORO 1 en rojo, SEMÁFORO 2 en amarillo            digitalWrite(green2, LOW);   // Apagar el verde del semáforo 2           digitalWrite(yellow2, HIGH); // Encender el amarillo del semáforo 2            delay(2000);                 // Mantenerlo encendido por 2 segundos            digitalWrite(yellow2, LOW);  // Apagar el amarillo del semáforo 2            digitalWrite(red1, LOW);     // Apagar el rojo del semáforo 1            // Repetir el ciclo         }                                                      Pág. 176                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Proyecto B: Creación de un sistema de detección de distancia de objetos               Habilidades desarrolladas con STEAM:                Ciencia: Estudio del sonido y cómo los ultrasonidos miden distancias.             Tecnología: Uso de sensores y microcontroladores.             Ingeniería: Diseño y ensamblaje del sistema.             Arte: Personalización estética del dispositivo (diseño atractivo del              hardware).             Matemáticas: Conversión de tiempo a distancia mediante fórmulas             físicas.                 Este  proyecto  ilustra  cómo  el  pensamiento  computacional  se  utiliza             para  integrar  conocimientos  y  habilidades  de  diferentes  disciplinas     EducaTeach - 2025   STEAM.                                                                                            EducaTeach - 2025                                                                                         Pág. 177                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                    MATERIALES:                                                                  PROTOBOARD (GALLETA)                                                                  PLACA DE PROGRAMACIÓN ARDUINO             Diagrama del proyecto B:                                                                  CABLES DE CONEXIÓN (JUMPERS)                                                                  SENSOR ULTRASÓNICO HC-SR04                                                                    FOCOS  LEDS  (PARA  ACTIVARLOS  SEGÚN  LA                                                                  DISTANCIA)                   EducaTeach - 2025                                                                                                     EducaTeach - 2025                           Programación por bloques:                                                                          Pág. 178                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                                                            Detalles de programación y diseño:                                                                           Pines:             Código real con IDE Arduino:                                trigPin  se  configura  como  salida                                                                          para enviar los pulsos ultrasónicos.                                                                         echoPin se configura como entrada                                                                         para recibir el eco del pulso.                                                                           Duración del pulso:                                                                         La función pulseIn() mide el tiempo                                                                         que  tarda  el  eco  en  regresar  al                                                                          sensor.                                                                          Cálculo de distancia:                                                                          La  fórmula  duracion  *  0.034  /  2                                                                         convierte el tiempo en distancia en     EducaTeach - 2025                                                   en  el  aire  es  aproximadamente                 EducaTeach - 2025                                                                         centímetros. La velocidad del sonido                                                                           0.034 cm/µs.                                                                             Dependiendo                                                                         Mensajes:              del       resultado,                                                                         imprime \"Estás cerca\" o \"Estás lejos\"                                                                         en el monitor serial.                                                                           Conexión:                                                                         Conecta el pin Trig del sensor al pin                                                                         3 del Arduino.                                                                          Conecta el pin Echo del sensor al pin                                                                         2 del Arduino.                                                                         Alimenta  el  sensor  con  Vcc  (5V)  y                                                                         GND.                  Para compilar y grabar el código a la placa Arduino, se             detallarán los pasos en las siguientes páginas.                                                          Pág. 179                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                   Proyecto C: Creación de un jardín automatizado             Habilidades desarrolladas con STEAM:                 Ciencia: Conceptos de sonido y ultrasonido.                Tecnología: Uso de Arduino y programación.                Ingeniería: Diseño del circuito y montaje.               Arte: Diseño del jardín y estética del sistema.     EducaTeach - 2025     Matemáticas: Cálculo de distancias y programación.                                              EducaTeach - 2025                      Este proyecto ilustra cómo el pensamiento computacional se utiliza             para integrar conocimientos y habilidades de diferentes disciplinas             STEAM.                Es poner en práctica los cursos, sacarlos del cuaderno y pizarrón             para crear una idea que te llevará un emprendimiento para la vida             real.           MATERIALES:          PROTOBOARD (GALLETA)          PLACA DE PROGRAMACIÓN ARDUINO          CABLES DE CONEXIÓN (JUMPERS)          FOCOS LED (ROJO Y VERDE)          2 RESISTENCIAS DE 200 OHMS         SENSOR DE HUMEDAD YL-69                                                            Pág. 180                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                                             En varios de los proyectos, aplicaremos los conocimientos                                        de física, para calcular distancias de objetos, por ejemplo:                   Detalles del proyecto C             Calcular el nivel de humedad de un huerto.             Cuando el nivel de humedad sea escaso, se activará el sensor para liberar el             líquido y así proveer la humedad adecuada a la hortaliza.               OBJETIVOS:             Aplicando  la  matemática  y  ciencia;  comprender  las  grandes  industrias  que              automatizan sus procesos y agilizan sus ganancias.      EducaTeach - 2025       Nivel de humedad →:                                                                           EducaTeach - 2025                                                                                         Diagrama de circuito:                                                                   Pág. 181                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Programación por bloques:                                                                   Luz roja para indicar que hay sequedad.                                                         Luz verde para indicar que hay humedad.             EducaTeach - 2025                                                                                                     EducaTeach - 2025                           Código           real        de              funcionamiento              con             mensaje en pantalla. Este             código se compila y sube              desde el IDE Arduino.                                                                    Pág. 182                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Proyecto  D:  crear  un  sistema  que  identifique  si  es  de  día,  tarde  o  noche,  utilizando  un             fotorresistor                Habilidades desarrolladas con STEAM:                     Ciencia: Entender cómo la luz afecta los componentes             electrónicos.                  Tecnología: Uso de Arduino y programación.                 Ingeniería: Diseño y construcción del circuito.      EducaTeach - 2025     Arte: Diseñar una presentación visual atractiva.                                                EducaTeach - 2025                         Matemáticas: Calibrar y analizar los valores de luz.              Este  proyecto  ilustra  cómo  el  pensamiento              computacional se utiliza para integrar conocimientos y             habilidades de diferentes disciplinas STEAM.              MATERIALES:         PROTOBOARD (GALLETA)         PLACA DE PROGRAMACIÓN ARDUINO         CABLES DE CONEXIÓN (JUMPERS)        FOCOS LED (3 COLORES)         3 RESISTENCIAS DE 200 OHMS         FOTORRESISTOR LDR         RESISTENCIA DE 10 K                                                          Pág. 183                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Diagrama del proyecto D:                             Programación en Arduino IDE:                                                                                   Utilizaremos un fotorresistor (o LDR, Light     EducaTeach - 2025                                                           cuya resistencia cambia dependiendo de la   EducaTeach - 2025                                                                                 Dependent  Resistor)  es  un  componente                                                                                   intensidad de luz incidente. La fórmula que                                                                                 describe  su  funcionamiento  se  basa  en                                                                                 una relación inversa entre la resistencia                                                                                   (generalmente medida en lux)                                                                                       y  la  intensidad  luminosa                                                                                     OBJETIVOS:                                                                                 Aplicando  la  matemática  y  la  ciencia,                                                                                 entender  las  estaciones  del  día  de                                                                                 manera  autónoma  por  medio  de  la                                                                                 detección  de  la  luminosidad  u                                                                                 oscuridad del ambiente.                                                                                  La fórmula par calcular la resistencia                                                                                 por medio de un fotorresistor es:                                                                    Pág. 184                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Proyecto E: Creación de un prototipo controlado por bluetooth             Habilidades desarrolladas con STEAM:                  Ciencia:  Comprender  el  funcionamiento  de  los  motores  y  la             electricidad.                  Tecnología: Uso de Arduino y módulos de comunicación Bluetooth.                  Ingeniería: Diseño del carro y conexión de componentes.                 Matemáticas:  Control  de  la  velocidad  de  los  motores  y  el  uso  de      EducaTeach - 2025   lógica en programación.                                                                           EducaTeach - 2025                    Arte:  Personalización  del  diseño  del  carro,  como  pintura  y             decoración.                Este proyecto ilustra cómo el pensamiento computacional se utiliza             para  integrar  conocimientos  y  habilidades de  diferentes  disciplinas             STEAM.                  MATERIALES:             TODO LO DESCRITO EN LA PÁGINA 172                                                                  Pág. 185                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Diagrama del proyecto E:                         EducaTeach - 2025   Esquema de conexiones para el proyecto:   Funcionamiento:                                         EducaTeach - 2025               Motores DC:         Conecta los dos motores a las salidas del puente H (L298N):     Comandos Bluetooth:        Motor izquierdo: OUT1 y OUT2.         Motor derecho: OUT3 y OUT4.                              F → Avanzar.         Puente H (L298N):                                        B → Retroceder.         Conecta los pines de control del puente H a la placa Arduino:   L → Girar izquierda.         IN1 → Pin 5 (Motor izquierdo, dirección 1).        IN2 → Pin 6 (Motor izquierdo, dirección 2).              R → Girar derecha.         IN3 → Pin 9 (Motor derecho, dirección 1).                S → Detener.         IN4 → Pin 10 (Motor derecho, dirección 2).        EN A → Pin 3 (PWM para motor izquierdo).         EN B → Pin 11 (PWM para motor derecho).                  Modulación PWM:         Alimentación del puente:                                 Controla la velocidad de los motores con las señales         Conecta la batería LiPo (9V) al terminal 12V y GND del L298N.   PWM en los pines EN A y EN B.         Conecta el terminal 5V del L298N al VIN de la placa Arduino.          Módulo Bluetooth HC-05:                                  Aplicación Bluetooth:        VCC → 5V en Arduino.         GND → GND en Arduino.                                    Usa  una app  como  Serial  Bluetooth  Terminal  para         TX → Pin 2 (RX software en Arduino).                     enviar  los  comandos  desde  tu  teléfono  al  módulo        RX → Pin 4 (TX software en Arduino). (Usa un divisor de voltaje en RX para         evitar daño al módulo).                                  HC-05.         Arduino Uno:        Alimenta el Arduino a través del VIN desde el puente L298N (5V).                                                      Pág. 186                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Programación:          #include <SoftwareSerial.h>                                                                     // Funciones de movimiento        // Configuración del Bluetooth                               void avanzar() {         SoftwareSerial bluetooth(2, 4); // RX, TX                      analogWrite(enA, 150); // Velocidad moderada                                                                       analogWrite(enB, 150);        // Pines del puente H (L298N)                                  digitalWrite(in1, HIGH);        const int   enA = 3;                                           digitalWrite(in2, LOW);        const int enB = 11;                                            digitalWrite(in3, HIGH);         const int in1 = 5;                                             digitalWrite(in4, LOW);         const int in2 = 6;                                           }        const int in3 = 9;         const int in4 = 10;                                          void retroceder() {                                                                       analogWrite(enA, 150);        void setup() {                                                 analogWrite(enB, 150);           // Configuración de pines                                    digitalWrite(in1, LOW);          pinMode(enA, OUTPUT);                                        digitalWrite(in2, HIGH);           pinMode(enB, OUTPUT);                                        digitalWrite(in3, LOW);           pinMode(in1, OUTPUT);                                        digitalWrite(in4, HIGH);          pinMode(in2, OUTPUT);                                      }           pinMode(in3, OUTPUT);           pinMode(in4, OUTPUT);                                      void girarIzquierda() {            // Iniciar comunicación serial                             analogWrite(enA, 150);      EducaTeach - 2025     Serial.begin(9600); // Monitor serial       digitalWrite(in2, HIGH);                            EducaTeach - 2025                                                                       analogWrite(enB, 150);              th.begin(9600); // Bluetooth          bluetoo                                                                       digitalWrite(in1, LOW);         }                                                                       digitalWrite(in3, HIGH);                                                                         digitalWrite(in4, LOW);        void loop() {                                                                     }           // Verificar si hay datos desde el Bluetooth           if (bluetooth.available()) {             char comando = bluetooth.read(); // Leer el comando                                                                       analogWrite(enA, 150);             Serial.println(comando); // Mostrar comando recibido     void girarDerecha() {                                                                       analogWrite(enB, 150);                                                                       digitalWrite(in1, HIGH);            // Procesar comando                                        digitalWrite(in2, LOW);             switch (comando) {                                         digitalWrite(in3, LOW);              case 'F': // Avanzar                                     digitalWrite(in4, HIGH);                 avanzar();                                           }                 break;              case 'B': // Retroceder                                void detener() {                 retroceder();                                          digitalWrite(in1, LOW);                bre  ak;                                               digitalWrite(in2, LOW);              case 'L': // Girar izquierda                             digitalWrite(in3, LOW);                 girarIzquierda();                                      digitalWrite(in4, LOW);                 break;                                               }              case 'R': // Girar derecha                 girarDerecha();                break;               case 'S': // Detener                 detener();                break;               default:                 detener(); // Comando desconocido                break;             }}}                                                       Pág. 187                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Proyecto F: carro seguidor de líneas.                         EducaTeach - 2025                                                                                                     EducaTeach - 2025                                        Diseñar y construir un carro autónomo que pueda seguir una línea trazada en el suelo de forma             precisa, integrando conceptos y habilidades de diferentes disciplinas STEAM.                                                            Pág. 188                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025                Integración STEAM               Ciencia:             Investigar cómo funciona un sensor de infrarrojo para la detección de líneas.             Estudiar cómo el contraste entre colores afecta la reflexión de luz.              Tecnología:              Seleccionar microcontroladores (Arduino, Raspberry Pi, etc.) y componentes necesarios: sensores IR,             motores, ruedas, y baterías.              Ingeniería:              Diseñar el chasis del carro usando materiales reciclados o impresión 3D.             Configurar el sistema de motores y su conexión con el microcontrolador.              Arte:             Diseñar el carro de manera estética y funcional.              Crear un circuito de pista con líneas curvas, intersecciones y retos visualmente atractivos.     EducaTeach - 2025     Matemáticas:                                                                                    EducaTeach - 2025                Aplicar cálculos para determinar la velocidad óptima del  carro y ajustar los motores mediante PWM              (Modulación por ancho de pulso).              COMPONENTES:           Arduino Nano          Módulos sensores de infrarrojo (IR) (mínimo dos)          L293D o puente H integrado (para controlar los motores)          Motores DC y ruedas          Batería recargable (ej. LiPo 7.4V o 9V)         Chasis para el carro          Cables Dupont          Protoboard (opcional para conexiones temporales)                                                                 Pág. 189                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025          PROGRAMACIÓN:                                                                  void adelante() {          #define IR1 2 // Sensor izquierdo                                                digitalWrite(IN1, HIGH);           #define IR2 3 // Sensor derecho                                                  digitalWrite(IN2, LOW);                                                                                           digitalWrite(IN3, HIGH);          #defi  ne ENA 5 // Habilitador motor izquierdo                                   digitalWrite(IN4, LOW);          #define IN1 6                                                                  }           #define IN2 7           #define ENB 9 // Habilitador motor derecho                                     void girarIzquierda() {           #define IN3 10                                                                   digitalWrite(IN1, LOW);           #define IN4 11                                                                   digitalWrite(IN2, LOW);                                                                                           digitalWrite(IN3, HIGH);          void setup() {                                                                   digitalWrite(IN4, LOW);             pinMode(IR1, INPUT);                                                         }             pinMode(IR2, INPUT);                                                                                         void girarDerecha() {             pinMode(ENA, OUTPUT);                                                          digitalWrite(IN1, HIGH);             pinMode(IN1, OUTPUT);                                                          digitalWrite(IN2, LOW);            pinMode(IN2, OUTPUT);                                                          digitalWrite(IN3, LOW);                                                                                            digitalWrite(IN4, LOW);            pinMode(ENB, OUTPUT);                                                        }              pinMode(IN3, OUTPUT);     EducaTeach - 2025       ana    logWrite(ENA, 200); // Velocidad inicial motor izquierdo     digitalWrite(IN1, LOW);   EducaTeach - 2025                                                                                          void detener() {            pinMode(IN4, OUTPUT);                                                                                           digitalWrite(IN2, LOW);                                                                                           digitalWrite(IN3, LOW);            analogWrite(ENB, 200); // Velocidad inicial motor derecho                                                                                            digitalWrite(IN4, LOW);          }             void loop() {                                                                  }             int sensorIzq = digitalRead(IR1);            int sensorDer = digitalRead(IR2);              if (sensorIzq == LOW \&\& sensorDer == LOW) { // Ambos sensores ven negro               adelante();             } else if (sensorIzq == LOW) { // Solo el izquierdo ve negro               girarIzquierda();             } else if (sensorDer == LOW) { // Solo el derecho ve negro              girarDerecha();             } else { // Ninguno ve negro               detener();            }          }                                                               Pág. 190                                                                                                     Profesor German Vásquez","Programación → diversificado                             EducaTeach - 2025        Diagrama de conexiones:          Sensores IR al Arduino Nano:          Sensor izquierdo (IR1):         Salida de datos (OUT): Conectar al pin digital D2 en el Arduino Nano.        VCC: C  onectar al pin 5V del Arduino Nano.        GND: Conectar al pin GND del Arduino Nano.          Sensor derecho (IR2):         Salida de datos (OUT): Conectar al pin digital D3 en el Arduino Nano.         VCC: Conectar al pin 5V del Arduino Nano.         GND: Conectar al pin GND del Arduino Nano.          Motores DC al L293D o puente H integrado:         Motor izquierdo:        Cable   positivo del motor al pin OUT1 del L293D.        Cable negativo del motor al pin OUT2 del L293D.           Motor derecho:      EducaTeach - 2025   Cable positivo del motor al pin OUT3 del L293D.                                                   EducaTeach - 2025          Cable negativo del motor al pin OUT4 del L293D.           Control del L293D desde el Arduino Nano:             Pin ENA (habilitador del motor izquierdo): Conectar al pin digital D5 en el Arduino Nano.        Pin IN1 y IN2 (control del motor izquierdo):         IN1 →   Pin digital D6 del Arduino Nano.        IN2 → Pin digital D7 del Arduino Nano.          Pin ENB (habilitador del motor derecho): Conectar al pin digital D9 en el Arduino Nano.          Pin IN3 y IN4 (control del motor derecho):         IN3 → Pin digital D10 del Arduino Nano.         IN4 → Pin digital D11 del Arduino Nano.          Alimentación del L293D y los motores:        Conectar VCC del L293D a la batería (7.4V o 9V).         Conec  tar GND del L293D al GND común del Arduino Nano y la batería.         Alimentación del Arduino Nano:         Conectar el pin VIN del Arduino Nano a la batería (7.4V o 9V).         Conectar GND al GND común del sistema.                                                         Pág. 191                                                                                                     Profesor German Vásquez"];